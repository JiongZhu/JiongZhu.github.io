<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[Intellij IDEA常用快捷键]]></title>
      <url>/2018/01/18/Intellij-IDEA%E5%B8%B8%E7%94%A8%E5%BF%AB%E6%8D%B7%E9%94%AE/</url>
      <content type="html"><![CDATA[<h1 id="IDEA常用快捷键"><a href="#IDEA常用快捷键" class="headerlink" title="IDEA常用快捷键"></a><strong><em>IDEA常用快捷键</em></strong></h1><p>[TOC]</p>
<a id="more"></a>
<h1 id="编辑-Editing"><a href="#编辑-Editing" class="headerlink" title="编辑[Editing]"></a>编辑[Editing]</h1><table>
<thead>
<tr>
<th style="text-align:center">快捷键</th>
<th style="text-align:center">中文说明</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">Ctrl + Space</td>
<td style="text-align:center">补全代码，由于经常与操作系统的输入法的切换冲突，所以实际很少用。一般直接在 idea 中开启输入自动补全机制</td>
</tr>
<tr>
<td style="text-align:center">Ctrl + Shift + Space</td>
<td style="text-align:center">在列出的可选项中只显示出你所输入的关键字最相关的信息<strong>（常用）</strong></td>
</tr>
<tr>
<td style="text-align:center">Ctrl + Shift + Enter</td>
<td style="text-align:center">代码补全后，自动在代码末尾添加分号结束符</td>
</tr>
<tr>
<td style="text-align:center">Ctrl + P</td>
<td style="text-align:center">在某个方法中，调用该按键后，会展示出这个方法的调用参数列表信息</td>
</tr>
<tr>
<td style="text-align:center">Ctrl + Q</td>
<td style="text-align:center">展示某个类或者方法的 API 说明文档</td>
</tr>
<tr>
<td style="text-align:center">Ctrl + mouse</td>
<td style="text-align:center">跳进到某个类或者方法源代码中进行查看<strong>（常用）</strong></td>
</tr>
<tr>
<td style="text-align:center">Alt + Insert</td>
<td style="text-align:center">自动生成某个类的 Getters, Setters, Constructors, hashCode/equals, toString 等代码<strong>（常用）</strong></td>
</tr>
<tr>
<td style="text-align:center">Ctrl + O</td>
<td style="text-align:center">展示该类中所有覆盖或者实现的方法列表，注意这里是字母小写的 O</td>
</tr>
<tr>
<td style="text-align:center">Ctrl + Alt + T</td>
<td style="text-align:center">自动生成具有环绕性质的代码，比如：if..else,try..catch, for, synchronized 等等，使用前要先选择好需要环绕的代码块<strong>（常用）</strong></td>
</tr>
<tr>
<td style="text-align:center">Ctrl + /</td>
<td style="text-align:center">对单行代码，添加或删除注释。分为两种情况：如果只是光标停留在某行，那么连续使用该快捷键，会不断注释掉下一行的代码；如果选定了某行代码（选定了某行代码一部分也算这种情况），那么连续使用该快捷键，会在添加或删除该行注释之间来回切换<strong>（常用）</strong></td>
</tr>
<tr>
<td style="text-align:center">Ctrl + Shift + /</td>
<td style="text-align:center">对代码块，添加或删除注释。它与 Ctrl + / 的区别是，它只会在代码块的开头与结尾添加注释符号！<strong>（常用）</strong></td>
</tr>
<tr>
<td style="text-align:center">Ctrl + W</td>
<td style="text-align:center">选中当前光标所在的代码块，多次触发，代码块会逐级变大<strong>（常用）</strong></td>
</tr>
<tr>
<td style="text-align:center">Ctrl + Shift + W</td>
<td style="text-align:center">是 Ctrl + W 的反向操作，多次触发，代码块会逐级变小，最小变为光标</td>
</tr>
<tr>
<td style="text-align:center">Alt + Q</td>
<td style="text-align:center">展示包含当前光标所在代码的父节点信息，比如在 java 方法中调用，就会展示方法签名信息</td>
</tr>
<tr>
<td style="text-align:center">Alt + Enter</td>
<td style="text-align:center">展示当前光标所在代码，可以变化的扩展操作</td>
</tr>
<tr>
<td style="text-align:center">Ctrl + Alt + L</td>
<td style="text-align:center">格式化代码 <strong>（常用）</strong></td>
</tr>
<tr>
<td style="text-align:center">Ctrl + Alt + O</td>
<td style="text-align:center">去除没有实际用到的包，这在 java 类中特别有用<strong>（常用）</strong></td>
</tr>
<tr>
<td style="text-align:center">Ctrl + Alt + I</td>
<td style="text-align:center">按照缩进的设定，自动缩进所选择的代码段</td>
</tr>
<tr>
<td style="text-align:center">Tab / Shift + Tab</td>
<td style="text-align:center">缩进或者不缩进一次所选择的代码段</td>
</tr>
<tr>
<td style="text-align:center">Ctrl + X 或 Shift Delete</td>
<td style="text-align:center">剪切当前代码<strong>（常用）</strong></td>
</tr>
<tr>
<td style="text-align:center">Ctrl + C 或 Ctrl + Insert</td>
<td style="text-align:center">拷贝当前代码<strong>（常用）</strong></td>
</tr>
<tr>
<td style="text-align:center">Ctrl + V 或 Shift + Insert</td>
<td style="text-align:center">粘贴之前剪切或拷贝的代码<strong>（常用）</strong></td>
</tr>
<tr>
<td style="text-align:center">Ctrl + Shift + V</td>
<td style="text-align:center">从之前的剪切或拷贝的代码历史记录中，选择现在需要粘贴的内容<strong>（常用）</strong></td>
</tr>
<tr>
<td style="text-align:center">Ctrl + D</td>
<td style="text-align:center">复制当前选中的代码<strong>（常用）</strong></td>
</tr>
<tr>
<td style="text-align:center">Ctrl + Y</td>
<td style="text-align:center">删除当前光标所在的代码行<strong>（常用）</strong></td>
</tr>
<tr>
<td style="text-align:center">Ctrl + Shift + J</td>
<td style="text-align:center">把下一行的代码接续到当前的代码行</td>
</tr>
<tr>
<td style="text-align:center">Ctrl + Enter</td>
<td style="text-align:center">当前代码行与下一行代码之间插入一个空行，原来所在的光标不变<strong>（常用）</strong></td>
</tr>
<tr>
<td style="text-align:center">Shift + Enter</td>
<td style="text-align:center">当前代码行与下一行代码之间插入一个空行，原来光标现在处于新加的空行上<strong>（常用）</strong></td>
</tr>
<tr>
<td style="text-align:center">Ctrl + Shift + U</td>
<td style="text-align:center">所选择的内容进行大小写转换<strong>（常用）</strong></td>
</tr>
<tr>
<td style="text-align:center">Ctrl + Shift + ]/[</td>
<td style="text-align:center">从当前光标所在位置开始，一直选择到当前光标所在代码段起始或者结束位置</td>
</tr>
<tr>
<td style="text-align:center">Ctrl + Delete</td>
<td style="text-align:center">删除从当前光标所在位置开始，直到这个单词的结尾的内容</td>
</tr>
<tr>
<td style="text-align:center">Ctrl + NumPad(+/-)</td>
<td style="text-align:center">展开或收缩代码段<strong>（常用）</strong></td>
</tr>
<tr>
<td style="text-align:center">Ctrl + Shift + NumPad(+)</td>
<td style="text-align:center">展开所有代码段</td>
</tr>
<tr>
<td style="text-align:center">Ctrl + Shift + NumPad(-)</td>
<td style="text-align:center">收缩所有代码段</td>
</tr>
<tr>
<td style="text-align:center">Ctrl + F4</td>
<td style="text-align:center">关闭当前标签页</td>
</tr>
<tr>
<td style="text-align:center">Shift + F6</td>
<td style="text-align:center">修改文件名字<strong>（常用）</strong></td>
</tr>
</tbody>
</table>
<h2 id="Ctrl-Shift-Space-示例（智能补全）"><a href="#Ctrl-Shift-Space-示例（智能补全）" class="headerlink" title="Ctrl + Shift + Space 示例（智能补全）"></a>Ctrl + Shift + Space 示例（智能补全）</h2><p>使用前，用于补全的列表，默认是以输入的关键字作为前缀的：</p>
<p><img src="http://cdn.zhuj.top/blog/20190222/bNim7mf6TiEj.png?imageslim" alt="mark"></p>
<p>使用后，用于补全的列表，会把与输入的关键字最相关的信息排到最前面，比如这里的 Resource 的实现类会直接过滤出来，很方便吧 O(∩_∩)O~：</p>
<p><img src="http://cdn.zhuj.top/blog/20190222/RcilBvuN6KJr.png?imageslim" alt="mark"></p>
<h2 id="Ctrl-P-示例（方法参数列表）"><a href="#Ctrl-P-示例（方法参数列表）" class="headerlink" title="Ctrl + P 示例（方法参数列表）"></a>Ctrl + P 示例（方法参数列表）</h2><p><img src="http://cdn.zhuj.top/blog/20190222/nptjthcUvEIT.png?imageslim" alt="mark"></p>
<h2 id="Ctrl-Q-示例（API-说明文档）"><a href="#Ctrl-Q-示例（API-说明文档）" class="headerlink" title="Ctrl + Q 示例（API 说明文档）"></a>Ctrl + Q 示例（API 说明文档）</h2><p><img src="http://cdn.zhuj.top/blog/20190222/CoWUQnnkhkDT.png?imageslim" alt="mark"></p>
<p>不大好用，字体太小了，还不如直接 [ctrl + 点击] 看源代码来的方便！</p>
<h2 id="Alt-Insert-示例（自动生成与类相关的代码）"><a href="#Alt-Insert-示例（自动生成与类相关的代码）" class="headerlink" title="Alt + Insert 示例（自动生成与类相关的代码）"></a>Alt + Insert 示例（自动生成与类相关的代码）</h2><p>如果绑定了 Spring 框架，还能自动生成与 Spring 相关的依赖参数哦：</p>
<p><img src="http://cdn.zhuj.top/blog/20190222/aD5NiDOckIiW.png?imageslim" alt="mark"></p>
<h2 id="Ctrl-O-示例（该类中所有覆盖或者实现的方法列表）"><a href="#Ctrl-O-示例（该类中所有覆盖或者实现的方法列表）" class="headerlink" title="Ctrl + O 示例（该类中所有覆盖或者实现的方法列表）"></a>Ctrl + O 示例（该类中所有覆盖或者实现的方法列表）</h2><p><img src="http://cdn.zhuj.top/blog/20190222/tm0OixigiE0n.png?imageslim" alt="mark"></p>
<h2 id="Ctrl-Alt-T-示例（生成具有环绕性质的代码）"><a href="#Ctrl-Alt-T-示例（生成具有环绕性质的代码）" class="headerlink" title="Ctrl + Alt + T 示例（生成具有环绕性质的代码）"></a>Ctrl + Alt + T 示例（生成具有环绕性质的代码）</h2><p>再强调一遍，使用前要先选择好需要环绕的代码块！没有选择代码块，还做环绕干嘛呢 O(∩_∩)O~<br><img src="http://cdn.zhuj.top/blog/20190222/BCptI9WCd6vC.png?imageslim" alt="mark"></p>
<p>在右边的 Surround with 列表，就是目前支持的自动代码环绕功能，可以直接通过列表最左边的快捷键选择，是不是很方便呀 O(∩_∩)O~</p>
<p>它还支持自定义的代码模板（Live templates）呢，很强大吧。</p>
<h2 id="Ctrl-Shift-V-示例（剪切或拷贝的代码历史记录中，选择粘贴的内容）"><a href="#Ctrl-Shift-V-示例（剪切或拷贝的代码历史记录中，选择粘贴的内容）" class="headerlink" title="Ctrl + Shift + V 示例（剪切或拷贝的代码历史记录中，选择粘贴的内容）"></a>Ctrl + Shift + V 示例（剪切或拷贝的代码历史记录中，选择粘贴的内容）</h2><p>这是一个很酷的功能 O(∩_∩)O~，它会把之前剪切或拷贝的代码历史记录（最近 5 条）展示出来，让你来选择哦。可惜的是，列表选项如果是中文会乱码，还好内容可以正常显示：</p>
<p><img src="http://cdn.zhuj.top/blog/20190222/asjGaQiflGHy.png?imageslim" alt="mark"></p>
<h1 id="查找或替换-Search-Replace"><a href="#查找或替换-Search-Replace" class="headerlink" title="查找或替换[Search/Replace]"></a>查找或替换[Search/Replace]</h1><table>
<thead>
<tr>
<th style="text-align:center">快捷键</th>
<th style="text-align:center">中文说明</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">Ctrl + F</td>
<td style="text-align:center">在当前标签页中进行查找，还支持正则表达式哦<strong>（常用）</strong></td>
</tr>
<tr>
<td style="text-align:center">F3</td>
<td style="text-align:center">如果找到了多个查找结果，每调用一次就会跳到下一个结果，很方便哦</td>
</tr>
<tr>
<td style="text-align:center">Shift + F3</td>
<td style="text-align:center">是 F3 的反向操作，即每调用一次就会跳到上一个结果</td>
</tr>
<tr>
<td style="text-align:center">Ctrl + R</td>
<td style="text-align:center">在当前标签页中进行替换操作<strong>（常用）</strong></td>
</tr>
<tr>
<td style="text-align:center">Ctrl + Shift + F</td>
<td style="text-align:center">通过路径查找<strong>（常用）</strong></td>
</tr>
<tr>
<td style="text-align:center">Ctrl + Shift + R</td>
<td style="text-align:center">通过路径替换<strong>（常用）</strong></td>
</tr>
</tbody>
</table>
<h2 id="Ctrl-F-（查找）"><a href="#Ctrl-F-（查找）" class="headerlink" title="Ctrl + F （查找）"></a>Ctrl + F （查找）</h2><p>触发后，会打开一个查找面板：</p>
<p><img src="http://cdn.zhuj.top/blog/20190222/im6LGUSV3ER3.png?imageslim" alt="mark"></p>
<p>具体含义如下：</p>
<table>
<thead>
<tr>
<th style="text-align:center">图示</th>
<th style="text-align:center">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">向上箭头</td>
<td style="text-align:center">就是 快捷键【Shift + F3】，每调用一次就会跳到上一个结果</td>
</tr>
<tr>
<td style="text-align:center">向下箭头</td>
<td style="text-align:center">就是 快捷键【F3】，每调用一次就会跳到下一个结果</td>
</tr>
<tr>
<td style="text-align:center">加号符号</td>
<td style="text-align:center">把当前的高亮项加入到选中的列表中</td>
</tr>
<tr>
<td style="text-align:center">减号符号</td>
<td style="text-align:center">把当前的高亮项从选中的列表中移除</td>
</tr>
<tr>
<td style="text-align:center">勾选符号</td>
<td style="text-align:center">把所有的查找结果同时选中，这很适合批量操作</td>
</tr>
<tr>
<td style="text-align:center">文本内的向上箭头</td>
<td style="text-align:center">打开查询结果列表面板</td>
</tr>
<tr>
<td style="text-align:center">两个框加一个向下箭头</td>
<td style="text-align:center">更多选项</td>
</tr>
<tr>
<td style="text-align:center">Match Case</td>
<td style="text-align:center">是否大小写敏感</td>
</tr>
<tr>
<td style="text-align:center">Regex</td>
<td style="text-align:center">正则表达式</td>
</tr>
<tr>
<td style="text-align:center">Words</td>
<td style="text-align:center">匹配单词</td>
</tr>
<tr>
<td style="text-align:center">x matches</td>
<td style="text-align:center">x 表示的是找到的记录数</td>
</tr>
</tbody>
</table>
<p>勾选符号选中效果：</p>
<p><img src="http://cdn.zhuj.top/blog/20190222/SmR25tuE813T.png?imageslim" alt="mark"></p>
<p>点击文本内的向上箭头，打开后的查询结果列表面板：</p>
<p><img src="http://cdn.zhuj.top/blog/20190222/RAHjDFfJm2QB.png?imageslim" alt="mark"></p>
<p>两个框加一个向下箭头，会变成一个大文本输入框，而且还多出一个查看搜索历史的按钮：</p>
<p><img src="http://cdn.zhuj.top/blog/20190222/XdM2QlosC8pg.png?imageslim" alt="mark"></p>
<h2 id="Ctrl-Shift-F-（通过路径查找）"><a href="#Ctrl-Shift-F-（通过路径查找）" class="headerlink" title="Ctrl + Shift + F （通过路径查找）"></a>Ctrl + Shift + F （通过路径查找）</h2><p><img src="http://cdn.zhuj.top/blog/20190222/QxXAOobQk8n2.png?imageslim" alt="mark"></p>
<h1 id="查看使用情况-Usage-Search"><a href="#查看使用情况-Usage-Search" class="headerlink" title="查看使用情况[Usage Search]"></a>查看使用情况[Usage Search]</h1><p>主要是查看当前光标所在内容使用情况</p>
<table>
<thead>
<tr>
<th style="text-align:center">快捷键</th>
<th style="text-align:center">中文说明</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">Alt + F7</td>
<td style="text-align:center">在当前项目中的使用情况，会打开一个使用情况面板</td>
</tr>
<tr>
<td style="text-align:center">Ctrl + F7</td>
<td style="text-align:center">在当前文件中的使用情况，找的内容会低亮显示</td>
</tr>
<tr>
<td style="text-align:center">Ctrl + Shift + F7</td>
<td style="text-align:center">在当前文件中的使用情况，找的内容会高亮显示</td>
</tr>
<tr>
<td style="text-align:center">Ctrl + Alt + F7</td>
<td style="text-align:center">打开使用情况列表（常用）**</td>
</tr>
</tbody>
</table>
<h2 id="Ctrl-Alt-F7（打开使用情况列表）"><a href="#Ctrl-Alt-F7（打开使用情况列表）" class="headerlink" title="Ctrl + Alt + F7（打开使用情况列表）"></a>Ctrl + Alt + F7（打开使用情况列表）</h2><p><img src="http://cdn.zhuj.top/blog/20190222/Xi1jL5yuIycs.png?imageslim" alt="mark"></p>
<h1 id="编译与运行【Compile-and-Run】"><a href="#编译与运行【Compile-and-Run】" class="headerlink" title="编译与运行【Compile and Run】"></a>编译与运行【Compile and Run】</h1><table>
<thead>
<tr>
<th style="text-align:center">快捷键</th>
<th style="text-align:center">中文说明</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">Ctrl + F9</td>
<td style="text-align:center">编译项目（如果之前有编译过，那么只会编译那些修改的类或者依赖的包）</td>
</tr>
<tr>
<td style="text-align:center">Ctrl + Shift + F9</td>
<td style="text-align:center">编译所中的范围（如果在某个类中，那么只会编译当前类）</td>
</tr>
<tr>
<td style="text-align:center">Alt + Shift + F10</td>
<td style="text-align:center">会打开一个已经配置的运行列表，让你选择一个后，再运行</td>
</tr>
<tr>
<td style="text-align:center">Alt + Shift + F9</td>
<td style="text-align:center">会打开一个已经配置的运行列表，让你选择一个后，再以调试模式运行</td>
</tr>
<tr>
<td style="text-align:center">Shift + F10</td>
<td style="text-align:center">立即运行当前配置的运行实例，这个在单元测试中特别好用 <strong>（常用）</strong></td>
</tr>
<tr>
<td style="text-align:center">Shift + F9</td>
<td style="text-align:center">立即以编译模式运行当前配置的运行实例</td>
</tr>
<tr>
<td style="text-align:center">Ctrl + Shift + F10</td>
<td style="text-align:center">按照编辑器绑定的文件类型，运行相关的程序。比如一个 html 页面，调用后，会直接打开一个浏览器</td>
</tr>
</tbody>
</table>
<h2 id="Alt-Shift-F10（打开运行列表，选择一个运行）"><a href="#Alt-Shift-F10（打开运行列表，选择一个运行）" class="headerlink" title="Alt + Shift + F10（打开运行列表，选择一个运行）"></a>Alt + Shift + F10（打开运行列表，选择一个运行）</h2><p><img src="http://cdn.zhuj.top/blog/20190222/XxdTob9SoriB.png?imageslim" alt="mark"></p>
<h1 id="调试-Debugging"><a href="#调试-Debugging" class="headerlink" title="调试[Debugging]"></a>调试[Debugging]</h1><table>
<thead>
<tr>
<th style="text-align:center">快捷键</th>
<th style="text-align:center">中文说明</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">F8</td>
<td style="text-align:center">跳到当前代码下一行 <strong>（常用）</strong></td>
</tr>
<tr>
<td style="text-align:center">F7</td>
<td style="text-align:center">跳入到调用的方法内部代码<strong>（常用）</strong></td>
</tr>
<tr>
<td style="text-align:center">Shift + F7</td>
<td style="text-align:center">会打开一个面板，让你选择具体要跳入的类方法，这个在复杂的嵌套代码中特别有用</td>
</tr>
<tr>
<td style="text-align:center">Shift + F8</td>
<td style="text-align:center">跳出当前的类，到上一级（常用）**</td>
</tr>
<tr>
<td style="text-align:center">Alt + F9</td>
<td style="text-align:center">让代码运行到当前光标所在处，非常棒的功能（常用）**</td>
</tr>
<tr>
<td style="text-align:center">Alt + F8</td>
<td style="text-align:center">打开一个表达式面板，然后进行进一步的计算</td>
</tr>
<tr>
<td style="text-align:center">F9</td>
<td style="text-align:center">结束当前断点的本轮调试（因为有可能代码会被调用多次，所以调用后只会结束当前的这一次）；如果有下一个断点会跳到下一个断点中<strong>（常用）</strong></td>
</tr>
<tr>
<td style="text-align:center">Ctrl + F8</td>
<td style="text-align:center">在当前光标处，添加或者删除断点</td>
</tr>
<tr>
<td style="text-align:center">Ctrl + Shift + F8</td>
<td style="text-align:center">打开当前断点的面板，可以进行条件过滤哦</td>
</tr>
</tbody>
</table>
<h2 id="Shift-F7（选择具体要跳入的类方法）"><a href="#Shift-F7（选择具体要跳入的类方法）" class="headerlink" title="Shift + F7（选择具体要跳入的类方法）"></a>Shift + F7（选择具体要跳入的类方法）</h2><p><img src="http://cdn.zhuj.top/blog/20190222/WmUcMOt8JwtP.png?imageslim" alt="mark"></p>
<h2 id="Alt-F8-（计算表达式）"><a href="#Alt-F8-（计算表达式）" class="headerlink" title="Alt + F8 （计算表达式）"></a>Alt + F8 （计算表达式）</h2><p>注意：要在当前断点之前的代码中，选择某一个变量运行才有效，因为只有代码运行过了，才会有值的呀 O(∩_∩)O~</p>
<p><img src="http://cdn.zhuj.top/blog/20190222/MwuUIOlPhUFo.png?imageslim" alt="mark"></p>
<h2 id="Ctrl-Shift-F8-（当前断点的面板）"><a href="#Ctrl-Shift-F8-（当前断点的面板）" class="headerlink" title="Ctrl + Shift + F8 （当前断点的面板）"></a>Ctrl + Shift + F8 （当前断点的面板）</h2><p><img src="http://cdn.zhuj.top/blog/20190222/Xj01cKoL8Qw7.png?imageslim" alt="mark"></p>
<h1 id="导航-Navigation"><a href="#导航-Navigation" class="headerlink" title="导航[Navigation]"></a>导航[Navigation]</h1><table>
<thead>
<tr>
<th style="text-align:center">快捷键</th>
<th style="text-align:center">中文说明</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">Ctrl + N</td>
<td style="text-align:center">打开类查询框<strong>（常用）</strong></td>
</tr>
<tr>
<td style="text-align:center">Ctrl + Shift + N</td>
<td style="text-align:center">打开文件查询框<strong>（常用）</strong></td>
</tr>
<tr>
<td style="text-align:center">Ctrl + Alt + Shift + N</td>
<td style="text-align:center">打开文本查询框</td>
</tr>
<tr>
<td style="text-align:center">Alt + 右箭头/左箭头</td>
<td style="text-align:center">跳到下一个/上一个编辑器标签</td>
</tr>
<tr>
<td style="text-align:center">F12</td>
<td style="text-align:center">如果当前在编辑窗口，触发后，会跳到之前操作过的工具栏上</td>
</tr>
<tr>
<td style="text-align:center">ESC</td>
<td style="text-align:center">从工具栏上，再跳回原来的编辑窗口，一般与 F12 配合使用</td>
</tr>
<tr>
<td style="text-align:center">Shift + ESC</td>
<td style="text-align:center">隐藏最后一个处于活跃状态的工具窗口</td>
</tr>
<tr>
<td style="text-align:center">Ctrl + Shift + F4</td>
<td style="text-align:center">同时关闭处于活动状态的某些工具栏窗口</td>
</tr>
<tr>
<td style="text-align:center">Ctrl + G</td>
<td style="text-align:center">跳转至某一行代码（常用）**</td>
</tr>
<tr>
<td style="text-align:center">Ctrl + E</td>
<td style="text-align:center">打开曾经操作过的文件历史列表</td>
</tr>
<tr>
<td style="text-align:center">Ctrl + Alt + 右箭头/左箭头</td>
<td style="text-align:center">在曾经浏览过的代码行中来回跳</td>
</tr>
<tr>
<td style="text-align:center">Ctrl + Shift + Backspace</td>
<td style="text-align:center">跳转到最近的编辑位置（如果曾经编辑过代码）</td>
</tr>
<tr>
<td style="text-align:center">Alt + F1</td>
<td style="text-align:center">打开一个类型列表，选择后会导航到当前文件或者内容的具体与类型相关的面板中</td>
</tr>
<tr>
<td style="text-align:center">Ctrl + B 或 Ctrl + 鼠标左键</td>
<td style="text-align:center">如果是类，那么会跳转到当前光标所在的类定义或者接口；如果是变量，会打开一个变量被引用的列表<strong>（常用）</strong></td>
</tr>
<tr>
<td style="text-align:center">Ctrl + Alt + B</td>
<td style="text-align:center">跳转到实现类，而不是接口（常用）**</td>
</tr>
<tr>
<td style="text-align:center">Ctrl + Shift + I</td>
<td style="text-align:center">打开一个面板，里面包含类代码</td>
</tr>
<tr>
<td style="text-align:center">Ctrl + Shift + B</td>
<td style="text-align:center">打开变量的类型所对应的类代码，只对变量有用</td>
</tr>
<tr>
<td style="text-align:center">Ctrl + U</td>
<td style="text-align:center">打开方法的超类方法或者类的超类，只对有超类的方法或者类有效</td>
</tr>
<tr>
<td style="text-align:center">Alt + 上/下箭头</td>
<td style="text-align:center">在某个类中，跳到上一个/下一个方法的签名上</td>
</tr>
<tr>
<td style="text-align:center"><code>Ctrl + ]/[</code></td>
<td style="text-align:center">移动光标到类定义的终止右大括号或者起始左大括号</td>
</tr>
<tr>
<td style="text-align:center">Ctrl + F12</td>
<td style="text-align:center">打开类的结构列表（常用）**</td>
</tr>
<tr>
<td style="text-align:center">Ctrl + H</td>
<td style="text-align:center">打开类的继承关系列表（常用）**</td>
</tr>
<tr>
<td style="text-align:center">Ctrl + Shift + H</td>
<td style="text-align:center">打开某个类方法的继承关系列表</td>
</tr>
<tr>
<td style="text-align:center">Ctrl + Alt + H</td>
<td style="text-align:center">打开所有类的方法列表，这些方法都调用了当前光标所处的某个类方法（常用）**</td>
</tr>
<tr>
<td style="text-align:center">F2/Shift + F2</td>
<td style="text-align:center">在编译错误的代码行中来回跳</td>
</tr>
<tr>
<td style="text-align:center">F4</td>
<td style="text-align:center">打开当前光标所在处的方法或类源码</td>
</tr>
<tr>
<td style="text-align:center">Alt + Home</td>
<td style="text-align:center">激活包路径的导航栏</td>
</tr>
<tr>
<td style="text-align:center">F11</td>
<td style="text-align:center">把光标所处的代码行添加为书签或者从书签中删除（常用）**</td>
</tr>
<tr>
<td style="text-align:center">Ctrl + F11</td>
<td style="text-align:center">把光标所处的代码行添加为带快捷键的书签或者从快捷键书签中删除</td>
</tr>
<tr>
<td style="text-align:center">Ctrl + [0-9]</td>
<td style="text-align:center">跳转到之前定义的快捷键书签</td>
</tr>
<tr>
<td style="text-align:center">Shift + F11</td>
<td style="text-align:center">打开书签列表<strong>（常用）</strong></td>
</tr>
</tbody>
</table>
<h2 id="Ctrl-N-（打开类查询框）"><a href="#Ctrl-N-（打开类查询框）" class="headerlink" title="Ctrl + N （打开类查询框）"></a>Ctrl + N （打开类查询框）</h2><p>键入类名的关键字，会自动出现相关的类哦，右侧还有一个勾选项，能够把引用的 jar 包中的类也加进来，很强大 O(∩_∩)O~</p>
<p><img src="http://cdn.zhuj.top/blog/20190222/2qtRgef60BNs.png?imageslim" alt="mark"></p>
<h2 id="Ctrl-Alt-右箭头-左箭头（在曾经浏览过的代码行中来回跳）"><a href="#Ctrl-Alt-右箭头-左箭头（在曾经浏览过的代码行中来回跳）" class="headerlink" title="Ctrl + Alt + 右箭头/左箭头（在曾经浏览过的代码行中来回跳）"></a>Ctrl + Alt + 右箭头/左箭头（在曾经浏览过的代码行中来回跳）</h2><p>如果操作系统装的是 NVIDIA 显卡驱动程序，那么触发这个热键，会把旋转显示内容，而不是触发 idea 的功能，因为 idea 热键被 NVIDIA 显卡驱动给劫持咯。</p>
<p>解决方法是禁用 NVIDIA 显卡驱动所有快捷键，：</p>
<p>1、控制面板-》显示-》屏幕分辨率：</p>
<p><img src="http://cdn.zhuj.top/blog/20190222/hI3bCSnEP5hf.png?imageslim" alt="mark"></p>
<p>2、点击【高级设置】-》核芯显卡控制面板：</p>
<p><img src="http://cdn.zhuj.top/blog/20190222/6Kdv9HalpI24.png?imageslim" alt="mark"></p>
<p>3、图形属性-》选项与支持-》禁用所有快捷键（这些快捷键几乎没有什么用处！）</p>
<p><img src="http://cdn.zhuj.top/blog/20190222/mHWdgmTeP0UX.png?imageslim" alt="mark"></p>
<h2 id="Alt-F1（打开一个类型列表）"><a href="#Alt-F1（打开一个类型列表）" class="headerlink" title="Alt + F1（打开一个类型列表）"></a>Alt + F1（打开一个类型列表）</h2><p><img src="http://cdn.zhuj.top/blog/20190222/AUVghjUXt1JO.png?imageslim" alt="mark"></p>
<h2 id="F11（添加为书签或者从书签中删除）"><a href="#F11（添加为书签或者从书签中删除）" class="headerlink" title="F11（添加为书签或者从书签中删除）"></a>F11（添加为书签或者从书签中删除）</h2><p>书签不是默认视图，所以我们要把它添加到当前视图中：View -&gt; Tool Windows -&gt; Favorites，打开 Favorites 面板：</p>
<p><img src="http://cdn.zhuj.top/blog/20190222/mbqsSaOh72Bv.png?imageslim" alt="mark"></p>
<p>Favorites 面板中的 Bookmarks 就是我们添加的书签哦：</p>
<p><img src="http://cdn.zhuj.top/blog/20190222/gOClC8bhfLHt.png?imageslim" alt="mark"></p>
<p>或者直接使用 Shift + F11，打开书签列表也可以的哦 O(∩_∩)O~。</p>
<h2 id="Ctrl-F11-（添加或删除带快捷键的书签）"><a href="#Ctrl-F11-（添加或删除带快捷键的书签）" class="headerlink" title="Ctrl + F11 （添加或删除带快捷键的书签）"></a>Ctrl + F11 （添加或删除带快捷键的书签）</h2><p>会打开一个设置快捷键的面板，比如这里点击了 1，那么它的快捷键就是 Ctrl + 1。</p>
<p>注意不要选择面板提供的 26 个大写字母，因为这会与 idea 的其他快捷键冲突，不知道 idea 为什么要把它们放在这里？好奇怪 O(∩_∩)O~</p>
<p><img src="http://cdn.zhuj.top/blog/20190222/csU9xqchmBPH.png?imageslim" alt="mark"></p>
]]></content>
      
        <categories>
            
            <category> IDE </category>
            
        </categories>
        
        
        <tags>
            
            <tag> IDEA </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Gradle+IntelliJ-IDEA-2017-2搭建SSM项目(三)——部分文件的配置]]></title>
      <url>/2017/11/03/Gradle+IntelliJ-IDEA-2017-2%E6%90%AD%E5%BB%BASSM%E9%A1%B9%E7%9B%AE(%E4%B8%89)%E2%80%94%E2%80%94%E9%83%A8%E5%88%86%E6%96%87%E4%BB%B6%E7%9A%84%E9%85%8D%E7%BD%AE/</url>
      <content type="html"><![CDATA[<h2 id="web-xml配置"><a href="#web-xml配置" class="headerlink" title="web.xml配置"></a>web.xml配置</h2><p>基于web3.1配置，主要包含log4j的监听与配置、编码过滤、spring监听、springMVC与mybatis配置文件的定位、错误页面配置等。<br><a id="more"></a></p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span><span class="meta">?&gt;</span></span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">"http://xmlns.jcp.org/xml/ns/javaee"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">"3.1"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>GradleSSMDemo<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--   log4j配置文件   --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>webAppRootKey<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>webapp.root<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>log4jConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:config/log4j.properties<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--   载入log4j配置文件   --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>log4jRefreshInterval<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>60000<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--  Spring刷新Log4j配置文件的间隔60秒,单位为millisecond  --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--   Spring和mybatis的配置文件   --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:config/spring/spring-mybatis.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--   编码过滤器   --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>encodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span></span><br><span class="line">            org.springframework.web.filter.CharacterEncodingFilter</span><br><span class="line">        <span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">async-supported</span>&gt;</span>true<span class="tag">&lt;/<span class="name">async-supported</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>encodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- log4j监听 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">listener</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">listener-class</span>&gt;</span>org.springframework.web.util.Log4jConfigListener<span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">listener</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--   Spring监听器   --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">listener</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">listener-class</span>&gt;</span></span><br><span class="line">            org.springframework.web.context.ContextLoaderListener</span><br><span class="line">        <span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">listener</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--   防止Spring内存溢出监听器   --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">listener</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">listener-class</span>&gt;</span></span><br><span class="line">            org.springframework.web.util.IntrospectorCleanupListener</span><br><span class="line">        <span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">listener</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--   Spring MVC servlet   --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>SpringMVC<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:/config/spring/spring-mvc.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">async-supported</span>&gt;</span>true<span class="tag">&lt;/<span class="name">async-supported</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>SpringMVC<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--   此处可以配置成*.do，对应struts的后缀习惯   --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 后台程序异常错误跳转页面 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 403跳转页面 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">error-page</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">error-code</span>&gt;</span>403<span class="tag">&lt;/<span class="name">error-code</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">location</span>&gt;</span>/html/403.htm<span class="tag">&lt;/<span class="name">location</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">error-page</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 404跳转页面 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">error-page</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">error-code</span>&gt;</span>404<span class="tag">&lt;/<span class="name">error-code</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">location</span>&gt;</span>/html/404.htm<span class="tag">&lt;/<span class="name">location</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">error-page</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 500跳转页面--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">error-page</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">error-code</span>&gt;</span>500<span class="tag">&lt;/<span class="name">error-code</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">location</span>&gt;</span>/html/500.htm<span class="tag">&lt;/<span class="name">location</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">error-page</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">error-page</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">exception-type</span>&gt;</span>java.lang.Exception<span class="tag">&lt;/<span class="name">exception-type</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">location</span>&gt;</span>/jsp/500.jsp<span class="tag">&lt;/<span class="name">location</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">error-page</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">error-page</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">exception-type</span>&gt;</span>java.lang.Throwable<span class="tag">&lt;/<span class="name">exception-type</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">location</span>&gt;</span>/jsp/500.jsp<span class="tag">&lt;/<span class="name">location</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">error-page</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="datasource-properties配置"><a href="#datasource-properties配置" class="headerlink" title="datasource.properties配置"></a>datasource.properties配置</h2><p>主要针对阿里的druid数据库连接池进行参数设置</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#jdbc</span> druid config</span><br><span class="line">jdbc<span class="selector-class">.driverClassName</span> = com<span class="selector-class">.mysql</span><span class="selector-class">.jdbc</span><span class="selector-class">.Driver</span></span><br><span class="line">#需要填写磁盘上mysql jar包的具体位置</span><br><span class="line">jdbc<span class="selector-class">.jarDirection</span> = E:\\Maven\\.gradle\\caches\\modules-<span class="number">2</span>\\files-<span class="number">2.1</span>\\mysql\\mysql-connector-java\\<span class="number">5.1</span>.<span class="number">42</span>\\<span class="number">80</span>a448a3ec2178b649bb2e3cb3610fab06e11669\\mysql-connector-java-<span class="number">5.1</span>.<span class="number">42</span>.jar</span><br><span class="line">jdbc<span class="selector-class">.url</span> = jdbc:mysql:<span class="comment">//127.0.0.1:3306/jiongzhu?useUnicode=true&amp;characterEncoding=UTF-8&amp;useSSL=false</span></span><br><span class="line">jdbc<span class="selector-class">.username</span> = root</span><br><span class="line">jdbc<span class="selector-class">.password</span> = zhxy</span><br><span class="line">#定义初始连接数</span><br><span class="line">jdbc<span class="selector-class">.initialSize</span> = <span class="number">1</span></span><br><span class="line">#定义最大连接数</span><br><span class="line">jdbc<span class="selector-class">.maxActive</span> = <span class="number">10</span></span><br><span class="line">#定义最小空闲</span><br><span class="line">jdbc<span class="selector-class">.minIdle</span> = <span class="number">1</span></span><br><span class="line">#定义最长等待时间</span><br><span class="line">jdbc<span class="selector-class">.maxWait</span> = <span class="number">10000</span></span><br><span class="line">#定义间隔多久才需要检测关闭的空闲连接</span><br><span class="line">jdbc<span class="selector-class">.timeBetweenEvictionRunsMillis</span> = <span class="number">60000</span></span><br><span class="line">#定义一个连接在池中的最小生存时间</span><br><span class="line">jdbc<span class="selector-class">.minEvictableIdleTimeMillis</span> = <span class="number">300000</span></span><br><span class="line"></span><br><span class="line">jdbc<span class="selector-class">.testWhileIdle</span> = true</span><br><span class="line">jdbc<span class="selector-class">.testOnBorrow</span> = true</span><br><span class="line">jdbc<span class="selector-class">.testOnReturn</span> = true</span><br><span class="line"></span><br><span class="line">#打开PSCache，并且指定每个连接上PSCache的大小</span><br><span class="line">jdbc<span class="selector-class">.poolPreparedStatements</span> = true</span><br><span class="line">jdbc<span class="selector-class">.maxPoolPreparedStatementPerConnectionSize</span> = <span class="number">20</span></span><br><span class="line">#配置提交方式，默认为TRUE，可以不用配置</span><br><span class="line">jdbc<span class="selector-class">.defaultAutoCommit</span> = true</span><br><span class="line">#配置连接有效与否的SQL,不同的数据配置不同</span><br><span class="line">jdbc<span class="selector-class">.validationQuery</span> = SELECT <span class="number">1</span></span><br><span class="line">jdbc<span class="selector-class">.filters</span> = stat</span><br></pre></td></tr></table></figure>
<h2 id="spring-mvc-xml配置"><a href="#spring-mvc-xml配置" class="headerlink" title="spring-mvc.xml配置"></a>spring-mvc.xml配置</h2><p>主要配置了控制器自动扫描、启用注解驱动、静态资源映射、springMVC注解、jsp与htm视图解析等。</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span><span class="meta">?&gt;</span></span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:mvc</span>=<span class="string">"http://www.springframework.org/schema/mvc"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/mvc</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/mvc/spring-mvc.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 自动扫描控制器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"com.jiongzhu.controller"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--  添加注解驱动，扩充了注解驱动，可以将请求参数绑定到控制器参数  --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:annotation-driven</span> <span class="attr">enable-matrix-variables</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 静态资源映射器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:resources</span> <span class="attr">mapping</span>=<span class="string">"/css/**"</span> <span class="attr">location</span>=<span class="string">"/WEB-INF/statics/css/"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:resources</span> <span class="attr">mapping</span>=<span class="string">"/fonts/**"</span> <span class="attr">location</span>=<span class="string">"/WEB-INF/statics/fonts/"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:resources</span> <span class="attr">mapping</span>=<span class="string">"/img/**"</span> <span class="attr">location</span>=<span class="string">"/WEB-INF/statics/img/"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:resources</span> <span class="attr">mapping</span>=<span class="string">"/js/**"</span> <span class="attr">location</span>=<span class="string">"/WEB-INF/statics/js/"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:resources</span> <span class="attr">mapping</span>=<span class="string">"/html/**"</span> <span class="attr">location</span>=<span class="string">"/WEB-INF/views/html/"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:resources</span> <span class="attr">mapping</span>=<span class="string">"/jsp/**"</span> <span class="attr">location</span>=<span class="string">"/WEB-INF/views/jsp/"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 配置首页访问 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:view-controller</span> <span class="attr">path</span>=<span class="string">"/"</span> <span class="attr">view-name</span>=<span class="string">"index"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 避免IE执行AJAX时，返回JSON出现下载文件 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"gsonHttpMessageConverter"</span> <span class="attr">class</span>=<span class="string">"org.springframework.http.converter.json.GsonHttpMessageConverter"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"supportedMediaTypes"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>text/html;charset=UTF-8<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--  启动SpringMVC的注解功能，完成请求和注解POJO的映射  --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"messageConverters"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">"gsonHttpMessageConverter"</span>/&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--  JSON转换器  --&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- jsp视图解析 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"internalResourceViewResolver"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.view.InternalResourceViewResolver"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"viewClass"</span> <span class="attr">value</span>=<span class="string">"org.springframework.web.servlet.view.JstlView"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"prefix"</span> <span class="attr">value</span>=<span class="string">"/WEB-INF/views/jsp/"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"suffix"</span> <span class="attr">value</span>=<span class="string">".jsp"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- html视图解析 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"freeMarkerConfigurer"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"templateLoaderPath"</span> <span class="attr">value</span>=<span class="string">"/WEB-INF/views/html/"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"freemarkerSettings"</span> &gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">props</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"tag_syntax"</span>&gt;</span>auto_detect<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"template_update_delay"</span>&gt;</span>60<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"default_encoding"</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"output_encoding"</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"locale"</span>&gt;</span>zh_CN<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"date_format"</span>&gt;</span>yyyy-MM-dd<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"time_format"</span>&gt;</span>HH:mm:ss<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"datetime_format"</span>&gt;</span>yyyy-MM-dd HH:mm:ss<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"number_format"</span>&gt;</span>#.##<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"classic_compatible"</span>&gt;</span>true<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"template_exception_handler"</span>&gt;</span>ignore<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">props</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"freeMarkerViewResolver"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"contentType"</span> <span class="attr">value</span>=<span class="string">"text/html;charset=UTF-8"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"exposeRequestAttributes"</span> <span class="attr">value</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"exposeSessionAttributes"</span> <span class="attr">value</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"cache"</span> <span class="attr">value</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"suffix"</span> <span class="attr">value</span>=<span class="string">".html"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"order"</span> <span class="attr">value</span>=<span class="string">"0"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="spring-mybatis-xml配置"><a href="#spring-mybatis-xml配置" class="headerlink" title="spring-mybatis.xml配置"></a>spring-mybatis.xml配置</h2><p>主要配置了service的自动扫描、数据库连接池的配置、mybatis实体接口与实体映射文件的扫描等。</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span><span class="meta">?&gt;</span></span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/context/spring-context.xsd"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--  自动扫描  --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"com.jiongzhu.service"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--  引入配置文件  --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"propertyConfigurer"</span> <span class="attr">class</span>=<span class="string">"org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"location"</span> <span class="attr">value</span>=<span class="string">"classpath:config/datasource.properties"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"dataSource"</span> <span class="attr">class</span>=<span class="string">"com.alibaba.druid.pool.DruidDataSource"</span> <span class="attr">init-method</span>=<span class="string">"init"</span> <span class="attr">destroy-method</span>=<span class="string">"close"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driverClassName"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.driverClassName&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.url&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.username&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.password&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--  初始化连接大小  --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"initialSize"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.initialSize&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--  连接池最大数量  --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"maxActive"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.maxActive&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--  连接池最小空闲  --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"minIdle"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.minIdle&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--  获取连接最大等待时间  --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"maxWait"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.maxWait&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--  配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒  --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"timeBetweenEvictionRunsMillis"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.timeBetweenEvictionRunsMillis&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--  配置一个连接在池中最小生存的时间，单位是毫秒  --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"minEvictableIdleTimeMillis"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.minEvictableIdleTimeMillis&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"testWhileIdle"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.testWhileIdle&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--  这里建议配置为TRUE，防止取到的连接不可用  --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"testOnBorrow"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.testOnBorrow&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"testOnReturn"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.testOnReturn&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--  打开PSCache，并且指定每个连接上PSCache的大小  --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"poolPreparedStatements"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.poolPreparedStatements&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"maxPoolPreparedStatementPerConnectionSize"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.maxPoolPreparedStatementPerConnectionSize&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--  这里配置提交方式，默认就是TRUE，可以不用配置  --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"defaultAutoCommit"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.defaultAutoCommit&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--  验证连接有效与否的SQL，不同的数据配置不同  --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"validationQuery"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.validationQuery&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"filters"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.filters&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"proxyFilters"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">"logFilter"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"logFilter"</span> <span class="attr">class</span>=<span class="string">"com.alibaba.druid.filter.logging.Slf4jLogFilter"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"statementExecutableSqlLogEnable"</span> <span class="attr">value</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- TKmybatis自动扫描注册Mybatis mapper,当使用一个以上的DataSource时可能需要配置&lt;property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" /&gt; --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"tk.mybatis.spring.mapper.MapperScannerConfigurer"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"basePackage"</span> <span class="attr">value</span>=<span class="string">"com.jiongzhu.mapper"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--  spring和MyBatis完美整合，不需要mybatis的配置映射文件  --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"sqlSessionFactory"</span> <span class="attr">class</span>=<span class="string">"org.mybatis.spring.SqlSessionFactoryBean"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"dataSource"</span> <span class="attr">ref</span>=<span class="string">"dataSource"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--  自动扫描mapper.xml文件  --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"mapperLocations"</span> <span class="attr">value</span>=<span class="string">"classpath*:config/mapper/*.xml"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- (事务管理)transaction manager, use JtaTransactionManager for global tx --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"transactionManager"</span> <span class="attr">class</span>=<span class="string">"org.springframework.jdbc.datasource.DataSourceTransactionManager"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"dataSource"</span> <span class="attr">ref</span>=<span class="string">"dataSource"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="gradle-properties配置"><a href="#gradle-properties配置" class="headerlink" title="gradle.properties配置"></a>gradle.properties配置</h2><p>mybatis实体类、实体接口、实体映射文件等包路径的参数配置，需要自动生产的数据库表的配置等，使用到basemapper插件。</p>
<figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#自定义basemapper插件</span></span><br><span class="line">mapper.<span class="attribute">plugin</span>=tk.mybatis.mapper.generator.MapperPlugin</span><br><span class="line"><span class="comment">#自定义basemapper接口</span></span><br><span class="line">mapper.<span class="attribute">mapper</span>=tk.mybatis.mapper.common.Mapper</span><br><span class="line"><span class="comment"># 生成的model类所在包</span></span><br><span class="line"><span class="attribute">modelPackage</span>=com.jiongzhu.model</span><br><span class="line"><span class="comment"># 生成的mapper接口类所在包</span></span><br><span class="line"><span class="attribute">mapperPackage</span>=com.jiongzhu.mapper</span><br><span class="line"><span class="comment"># 生成的mapper xml文件所在包</span></span><br><span class="line"><span class="attribute">sqlMapperPackage</span>=config.mapper</span><br><span class="line"><span class="comment"># 数据库表</span></span><br><span class="line">gererator.<span class="attribute">tableName</span>=user</span><br><span class="line"><span class="comment"># 生成的实体类</span></span><br><span class="line">gererator.<span class="attribute">objectName</span>=User</span><br><span class="line"><span class="comment"># 数据库</span></span><br><span class="line">gererator.<span class="attribute">schema</span>=jiongzhu</span><br></pre></td></tr></table></figure>
<h2 id="generatorConfig-xml配置"><a href="#generatorConfig-xml配置" class="headerlink" title="generatorConfig.xml配置"></a>generatorConfig.xml配置</h2><p>mybatisGenerator的具体配置，关于mybatisGenerator相关运用可以自行百度。</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span><span class="meta">?&gt;</span></span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE generatorConfiguration</span></span><br><span class="line"><span class="meta">        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"</span></span><br><span class="line"><span class="meta">        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd"&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">generatorConfiguration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- mysql数据库jar包 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">classPathEntry</span> <span class="attr">location</span>=<span class="string">"$&#123;jarDirection&#125;"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 一个数据库一个context --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context</span> <span class="attr">id</span>=<span class="string">"MysqlContext"</span> <span class="attr">targetRuntime</span>=<span class="string">"MyBatis3Simple"</span> <span class="attr">defaultModelType</span>=<span class="string">"flat"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 生成文件的编码 (eclipse插件的时候这里并没有什么卵用，需要在eclipse根目录的eclipse.ini最后添加 -Dfile.encoding=UTF-8  )--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"javaFileEncoding"</span> <span class="attr">value</span>=<span class="string">"UTF-8"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 当表名或者字段名为SQL关键字的时候，可以设置该属性为true，MBG会自动给表名或字段名添加**分隔符**  --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"autoDelimitKeywords"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 由于beginningDelimiter和endingDelimiter的默认值为双引号(")，在Mysql中不能这么写，所以还要将这两个默认值改为**反单引号(`)** --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"beginningDelimiter"</span> <span class="attr">value</span>=<span class="string">"`"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"endingDelimiter"</span> <span class="attr">value</span>=<span class="string">"`"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 通过插件生成自定义basemapper接口 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span> <span class="attr">type</span>=<span class="string">"$&#123;plugin&#125;"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"mappers"</span> <span class="attr">value</span>=<span class="string">"$&#123;mapper&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 注释 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">commentGenerator</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 是否取消注释 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"suppressAllComments"</span> <span class="attr">value</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"addRemarkComments"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 是否取消时间戳 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"suppressDate"</span> <span class="attr">value</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">commentGenerator</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- jdbc连接 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">jdbcConnection</span> <span class="attr">driverClass</span>=<span class="string">"$&#123;driverClass&#125;"</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">connectionURL</span>=<span class="string">"$&#123;connectionURL&#125;"</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">userId</span>=<span class="string">"$&#123;userId&#125;"</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">password</span>=<span class="string">"$&#123;password&#125;"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">jdbcConnection</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 类型转换 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">javaTypeResolver</span> &gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 是否使用bigDecimal， false可自动转化以下类型（Long, Integer, Short, etc.） --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"forceBigDecimals"</span> <span class="attr">value</span>=<span class="string">"false"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">javaTypeResolver</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 生成实体类地址 --&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">javaModelGenerator</span> <span class="attr">targetPackage</span>=<span class="string">"$&#123;modelPackage&#125;"</span></span></span><br><span class="line"><span class="tag">                              <span class="attr">targetProject</span>=<span class="string">"$&#123;src_main_java&#125;"</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 是否在当前路径下新加一层schema,eg：fase路径com.zhxy.model， true:com.zhxy.model.[schemaName] --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"enableSubPackages"</span> <span class="attr">value</span>=<span class="string">"false"</span> /&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 是否针对string类型的字段在set的时候进行trim调用 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"trimStrings"</span> <span class="attr">value</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">javaModelGenerator</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">&lt;!-- 生成mapper xml文件 --&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">sqlMapGenerator</span> <span class="attr">targetPackage</span>=<span class="string">"$&#123;sqlMapperPackage&#125;"</span>  </span></span><br><span class="line"><span class="tag">                          <span class="attr">targetProject</span>=<span class="string">"$&#123;src_main_resources&#125;"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"enableSubPackages"</span> <span class="attr">value</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">sqlMapGenerator</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 生成mapper xml对应client，也就是接口dao --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">javaClientGenerator</span> <span class="attr">type</span>=<span class="string">"XMLMAPPER"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">targetPackage</span>=<span class="string">"$&#123;mapperPackage&#125;"</span>  </span></span><br><span class="line"><span class="tag">        <span class="attr">targetProject</span>=<span class="string">"$&#123;src_main_java&#125;"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"enableSubPackages"</span> <span class="attr">value</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">javaClientGenerator</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 列出要生成代码的所有表，这里配置的是不生成Example文件 --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- schema即为数据库名 tableName为对应的数据库表 domainObjectName是要生成的实体类</span></span><br><span class="line"><span class="comment">        enable*ByExample是否生成 example类   --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span> <span class="attr">tableName</span>=<span class="string">"$&#123;tableName&#125;"</span> <span class="attr">domainObjectName</span>=<span class="string">"$&#123;objectName&#125;"</span></span></span><br><span class="line"><span class="tag">               <span class="attr">schema</span>=<span class="string">"$&#123;schema&#125;"</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 忽略列，不生成bean 字段</span></span><br><span class="line"><span class="comment">            &lt;ignoreColumn column="FRED" /&gt;--&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 指定列的java数据类型 --&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- &lt;columnOverride column="LONG_VARCHAR_FIELD" jdbcType="VARCHAR" /&gt;  --&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 用于指定生成实体类时是否使用实际的列名作为实体类的属性名。默认false是 Camel Case风格--&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--&lt;property name="useActualColumnNames" value="false" /&gt;--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">generatedKey</span> <span class="attr">column</span>=<span class="string">"id"</span> <span class="attr">sqlStatement</span>=<span class="string">"Mysql"</span> <span class="attr">identity</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">context</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">generatorConfiguration</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="自动生成的User-java、UserMapper-java、UserMapper-xml展示"><a href="#自动生成的User-java、UserMapper-java、UserMapper-xml展示" class="headerlink" title="自动生成的User.java、UserMapper.java、UserMapper.xml展示"></a>自动生成的User.java、UserMapper.java、UserMapper.xml展示</h2><p>首先是User.java实体类，手动加入了lombok，代码得到简化，关于lombok使用可以自行百度，比如这里我在类上使用了lombok包的@Getter、@Setter注解，则在编译生成.class文件时会对类下的所有成员变量自动生产set与get方法。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jiongzhu.model;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Getter;</span><br><span class="line"><span class="keyword">import</span> lombok.Setter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.persistence.*;</span><br><span class="line"><span class="keyword">import</span> javax.validation.constraints.NotNull;</span><br><span class="line"><span class="keyword">import</span> javax.validation.constraints.Size;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Getter</span></span><br><span class="line"><span class="meta">@Setter</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Id</span></span><br><span class="line">    <span class="meta">@Column</span>(name = <span class="string">"Id"</span>)</span><br><span class="line">    <span class="meta">@GeneratedValue</span>(strategy = GenerationType.IDENTITY)</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Column</span>(name = <span class="string">"userNo"</span>)</span><br><span class="line">    <span class="meta">@NotNull</span>(message = <span class="string">"账号不能为空！"</span>)</span><br><span class="line">    <span class="meta">@Size</span>(min = <span class="number">10</span>, max = <span class="number">10</span>,message = <span class="string">"账号长度为10个字符！"</span>)</span><br><span class="line">    <span class="keyword">private</span> String userno;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Column</span>(name = <span class="string">"userName"</span>)</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Column</span>(name = <span class="string">"userPass"</span>)</span><br><span class="line">    <span class="meta">@NotNull</span>(message = <span class="string">"密码不能为空！"</span>)</span><br><span class="line">    <span class="meta">@Size</span>(min = <span class="number">4</span>,max = <span class="number">8</span>,message = <span class="string">"密码长度为4-8个字符！"</span>)</span><br><span class="line">    <span class="keyword">private</span> String userpass;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String sex;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="keyword">private</span> String phone;</span><br><span class="line">    <span class="keyword">private</span> String address;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>然后是UserMapper.java接口，继承自通用Mapper，通用Mapper中包含了许多常用的增删改查与统计方法。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jiongzhu.mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.jiongzhu.model.User;</span><br><span class="line"><span class="keyword">import</span> tk.mybatis.mapper.common.Mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> <span class="keyword">extends</span> <span class="title">Mapper</span>&lt;<span class="title">User</span>&gt; </span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>最后是UserMapper.xml实体映射文件，</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span><span class="meta">?&gt;</span></span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.jiongzhu.mapper.UserMapper"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"BaseResultMap"</span> <span class="attr">type</span>=<span class="string">"com.jiongzhu.model.User"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">      WARNING - @mbg.generated</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"Id"</span> <span class="attr">jdbcType</span>=<span class="string">"INTEGER"</span> <span class="attr">property</span>=<span class="string">"id"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"userNo"</span> <span class="attr">jdbcType</span>=<span class="string">"VARCHAR"</span> <span class="attr">property</span>=<span class="string">"userno"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"userName"</span> <span class="attr">jdbcType</span>=<span class="string">"VARCHAR"</span> <span class="attr">property</span>=<span class="string">"username"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"userPass"</span> <span class="attr">jdbcType</span>=<span class="string">"VARCHAR"</span> <span class="attr">property</span>=<span class="string">"userpass"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"sex"</span> <span class="attr">jdbcType</span>=<span class="string">"CHAR"</span> <span class="attr">property</span>=<span class="string">"sex"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"age"</span> <span class="attr">jdbcType</span>=<span class="string">"INTEGER"</span> <span class="attr">property</span>=<span class="string">"age"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"phone"</span> <span class="attr">jdbcType</span>=<span class="string">"VARCHAR"</span> <span class="attr">property</span>=<span class="string">"phone"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"address"</span> <span class="attr">jdbcType</span>=<span class="string">"VARCHAR"</span> <span class="attr">property</span>=<span class="string">"address"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="BaseService-java配置"><a href="#BaseService-java配置" class="headerlink" title="BaseService.java配置"></a>BaseService.java配置</h2><p>结合通用mapper接口自行编写，使用起来非常方便。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jiongzhu.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Param;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.RowBounds;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> tk.mybatis.mapper.common.Mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">BaseService</span>&lt;<span class="title">T</span>&gt;</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Mapper&lt;T&gt; mapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMapper</span><span class="params">(Mapper&lt;T&gt; mapper)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.mapper = mapper;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据实体属性作为条件进行删除，查询条件使用等号</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> record 参数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 返回值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">delete</span><span class="params">(T record)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> mapper.delete(record);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据主键字段进行删除，方法参数必须包含完整的主键属性</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key 参数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 返回值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">deleteByPrimaryKey</span><span class="params">(Object key)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> mapper.deleteByPrimaryKey(key);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 保存一个实体，null的属性也会保存，不会使用数据库默认值</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> record 参数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 返回值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">insert</span><span class="params">(T record)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> mapper.insert(record);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 保存一个实体，null的属性不会保存，会使用数据库默认值</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> record 参数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 返回值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">insertSelective</span><span class="params">(T record)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> mapper.insertSelective(record);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据主键字段查询总数，方法参数必须包含完整的主键属性，查询条件使用等号</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key 参数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 返回值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">existsWithPrimaryKey</span><span class="params">(Object key)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> mapper.existsWithPrimaryKey(key);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询全部结果</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> () 无参数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 返回值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;T&gt; <span class="title">selectAll</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> mapper.selectAll();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据主键字段进行查询，方法参数必须包含完整的主键属性，查询条件使用等号</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key 参数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 返回值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> T <span class="title">selectByPrimaryKey</span><span class="params">(Object key)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> mapper.selectByPrimaryKey(key);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据实体中的属性查询总数，查询条件使用等号</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> record 参数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 返回值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">selectCount</span><span class="params">(T record)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> mapper.selectCount(record);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据实体中的属性值进行查询，查询条件使用等号</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> record 参数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 返回值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;T&gt; <span class="title">select</span><span class="params">(T record)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> mapper.select(record);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据实体中的属性进行查询，只能有一个返回值，有多个结果是抛出异常，查询条件使用等号</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> record 参数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 返回值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> T <span class="title">selectOne</span><span class="params">(T record)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> mapper.selectOne(record);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据主键更新实体全部字段，null值会被更新</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> record 参数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 返回值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">updateByPrimaryKey</span><span class="params">(T record)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> mapper.updateByPrimaryKey(record);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据主键更新属性不为null的值</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> record 参数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 返回值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">updateByPrimaryKeySelective</span><span class="params">(T record)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> mapper.updateByPrimaryKeySelective(record);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据Example条件删除数据</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> example 参数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 返回值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">deleteByExample</span><span class="params">(Object example)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> mapper.deleteByExample(example);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据Example条件进行查询</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> example 参数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 返回值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;T&gt; <span class="title">selectByExample</span><span class="params">(Object example)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> mapper.selectByExample(example);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据Example条件进行查询总数</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> example 参数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 返回值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">selectCountByExample</span><span class="params">(Object example)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> mapper.selectCountByExample(example);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据Example条件更新实体`record`包含的全部属性，null值会被更新</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> record 参数1</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> example 参数2</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 返回值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">updateByExample</span><span class="params">(@Param(<span class="string">"record"</span>)</span> T record, @<span class="title">Param</span><span class="params">(<span class="string">"example"</span>)</span> Object example)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> mapper.updateByExample(record,example);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据Example条件更新实体`record`包含的不是null的属性值</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> record 参数1</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> example 参数2</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 返回值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">updateByExampleSelective</span><span class="params">(@Param(<span class="string">"record"</span>)</span> T record, @<span class="title">Param</span><span class="params">(<span class="string">"example"</span>)</span> Object example)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> mapper.updateByExampleSelective(record, example);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据example条件和RowBounds进行分页查询</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> example 参数1</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> rowBounds 参数2</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 返回值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;T&gt; <span class="title">selectByExampleAndRowBounds</span><span class="params">(Object example, RowBounds rowBounds)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> mapper.selectByExampleAndRowBounds(example, rowBounds);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据实体属性和RowBounds进行分页查询</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> record 参数1</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> rowBounds 参数2</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 返回值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;T&gt; <span class="title">selectByRowBounds</span><span class="params">(T record, RowBounds rowBounds)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> mapper.selectByRowBounds(record, rowBounds);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>下面展示一下，UserService.java内容，当继承了通用service之后，已经继承了所有的通用方法，当然自己可以重写任意方法和自己添加父类没有实现的方法。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jiongzhu.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.jiongzhu.model.User;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span>(value = <span class="string">"userService"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserService</span> <span class="keyword">extends</span> <span class="title">BaseService</span>&lt;<span class="title">User</span>&gt;</span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">selectOne</span><span class="params">(User record)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">super</span>.selectOne(record);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="log4j-properties配置"><a href="#log4j-properties配置" class="headerlink" title="log4j.properties配置"></a>log4j.properties配置</h2><p>本项目使用到的日志系统为log4j，具体配置信息如下：</p>
<figure class="highlight roboconf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">### log4j\u8BBE\u7F6E### log4j.rootLogger = debug,stdout,D,E,W,I</span></span><br><span class="line">log4j.rootLogger = debug,D,E,W,I</span><br><span class="line"></span><br><span class="line"><span class="comment">### \u8F93\u51FA\u4FE1\u606F\u5230\u63A7\u5236\u62AC ### \u4E0D\u63A8\u8350\uFF0C\u8981\u517B\u6210\u770B\u65E5\u5FD7\u6587\u4EF6\u7684\u4E60\u60EF</span></span><br><span class="line"><span class="comment">#log4j.appender.stdout = org.apache.log4j.ConsoleAppender</span></span><br><span class="line"><span class="comment">#log4j.appender.stdout.Target = System.out</span></span><br><span class="line"><span class="comment">#log4j.appender.stdout.layout = org.apache.log4j.PatternLayout</span></span><br><span class="line"><span class="comment">#log4j.appender.stdout.layout.ConversionPattern = [%d&#123;yyyy-MM-dd HH:mm:ss a&#125;]:%p %l%m%n</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### \u8F93\u51FADEBUG \u7EA7\u522B\u4EE5\u4E0A\u7684\u65E5\u5FD7\u5230$&#123;webapp.root&#125;/logs/debug.log ###</span></span><br><span class="line">log4j.logger.debug = D</span><br><span class="line">log4j.appender.D = org.apache.log4j.DailyRollingFileAppender</span><br><span class="line">log4j.appender.D.File = $&#123;<span class="attribute">webapp.root&#125;/logs/debug.log</span></span><br><span class="line"><span class="attribute">log4j.appender.D.Append = true</span></span><br><span class="line"><span class="attribute">log4j.appender.D.Threshold = DEBUG</span></span><br><span class="line"><span class="attribute">log4j.appender.D.DatePattern='_'yyyy-MM-dd'.log'</span></span><br><span class="line"><span class="attribute">log4j.appender.D.layout = org.apache.log4j.PatternLayout</span></span><br><span class="line"><span class="attribute">log4j.appender.D.layout.ConversionPattern = %d&#123;yyyy-MM-dd HH</span>:mm:ss a&#125; [Thread: %t][ Class:%c &gt;&gt; Method: %l ]%n%p:%m%n</span><br><span class="line"></span><br><span class="line">### \u8F93\u51FAERROR \u7EA7\u522B\u4EE5\u4E0A\u7684\u65E5\u5FD7\u5230$&#123;webapp<span class="variable">.root</span>&#125;/logs/error<span class="variable">.log</span> ###</span><br><span class="line">log4j<span class="variable">.logger</span><span class="variable">.error</span> = E</span><br><span class="line">log4j<span class="variable">.appender</span><span class="variable">.E</span> = org<span class="variable">.apache</span><span class="variable">.log</span>4j<span class="variable">.DailyRollingFileAppender</span></span><br><span class="line">log4j<span class="variable">.appender</span><span class="variable">.E</span><span class="variable">.File</span> =$&#123;webapp<span class="variable">.root</span>&#125;/logs/error<span class="variable">.log</span></span><br><span class="line">log4j<span class="variable">.appender</span><span class="variable">.E</span><span class="variable">.Append</span> = true</span><br><span class="line">log4j<span class="variable">.appender</span><span class="variable">.E</span><span class="variable">.Threshold</span> = ERROR</span><br><span class="line">log4j<span class="variable">.appender</span><span class="variable">.E</span><span class="variable">.DatePattern</span>='_'yyyy-MM-dd'<span class="variable">.log</span>'</span><br><span class="line">log4j<span class="variable">.appender</span><span class="variable">.E</span><span class="variable">.layout</span> = org<span class="variable">.apache</span><span class="variable">.log</span>4j<span class="variable">.PatternLayout</span></span><br><span class="line">log4j<span class="variable">.appender</span><span class="variable">.E</span><span class="variable">.layout</span><span class="variable">.ConversionPattern</span> = %d&#123;yyyy-MM-dd HH:mm:ss a&#125; [Thread: %t][ Class:%c &gt;&gt; Method: %l ]%n%p:%m%n</span><br><span class="line"></span><br><span class="line">### \u8F93\u51FAWARN \u7EA7\u522B\u4EE5\u4E0A\u7684\u65E5\u5FD7\u5230$&#123;webapp<span class="variable">.root</span>&#125;/logs/warn<span class="variable">.log</span> ###</span><br><span class="line">log4j<span class="variable">.logger</span><span class="variable">.warn</span> = W</span><br><span class="line">log4j<span class="variable">.appender</span><span class="variable">.W</span> = org<span class="variable">.apache</span><span class="variable">.log</span>4j<span class="variable">.DailyRollingFileAppender</span></span><br><span class="line">log4j<span class="variable">.appender</span><span class="variable">.W</span><span class="variable">.File</span> = $&#123;webapp<span class="variable">.root</span>&#125;/logs/warn<span class="variable">.log</span></span><br><span class="line">log4j<span class="variable">.appender</span><span class="variable">.W</span><span class="variable">.Append</span> = true</span><br><span class="line">log4j<span class="variable">.appender</span><span class="variable">.W</span><span class="variable">.Threshold</span> = WARN</span><br><span class="line">log4j<span class="variable">.appender</span><span class="variable">.W</span><span class="variable">.DatePattern</span>='_'yyyy-MM-dd'<span class="variable">.log</span>'</span><br><span class="line">log4j<span class="variable">.appender</span><span class="variable">.W</span><span class="variable">.layout</span> = org<span class="variable">.apache</span><span class="variable">.log</span>4j<span class="variable">.PatternLayout</span></span><br><span class="line">log4j<span class="variable">.appender</span><span class="variable">.W</span><span class="variable">.layout</span><span class="variable">.ConversionPattern</span> = %d&#123;yyyy-MM-dd HH:mm:ss a&#125; [Thread: %t][ Class:%c &gt;&gt; Method: %l ]%n%p:%m%n</span><br><span class="line"></span><br><span class="line">### \u8F93\u51FAINFO \u7EA7\u522B\u4EE5\u4E0A\u7684\u65E5\u5FD7\u5230$&#123;webapp<span class="variable">.root</span>&#125;/logs/info<span class="variable">.log</span> ###</span><br><span class="line">logger<span class="variable">.logger</span><span class="variable">.info</span> = I</span><br><span class="line">log4j<span class="variable">.appender</span><span class="variable">.I</span> = org<span class="variable">.apache</span><span class="variable">.log</span>4j<span class="variable">.DailyRollingFileAppender</span></span><br><span class="line">log4j<span class="variable">.appender</span><span class="variable">.I</span><span class="variable">.File</span> =$&#123;webapp<span class="variable">.root</span>&#125;/logs/info<span class="variable">.log</span></span><br><span class="line">log4j<span class="variable">.appender</span><span class="variable">.I</span><span class="variable">.Append</span> = true</span><br><span class="line">log4j<span class="variable">.appender</span><span class="variable">.I</span><span class="variable">.Threshold</span> = INFO</span><br><span class="line">log4j<span class="variable">.appender</span><span class="variable">.I</span><span class="variable">.DatePattern</span>='_'yyyy-MM-dd'<span class="variable">.log</span>'</span><br><span class="line">log4j<span class="variable">.appender</span><span class="variable">.I</span><span class="variable">.layout</span> = org<span class="variable">.apache</span><span class="variable">.log</span>4j<span class="variable">.PatternLayout</span></span><br><span class="line">log4j<span class="variable">.appender</span><span class="variable">.I</span><span class="variable">.layout</span><span class="variable">.ConversionPattern</span> = %d&#123;yyyy-MM-dd HH:mm:ss a&#125; [Thread: %t][ Class:%c &gt;&gt; Method: %l ]%n%p:%m%n</span><br><span class="line"></span><br><span class="line">### mybatis\u6253\u5370sql\u8BED\u53E5,\u6307\u5B9Amapper\u914D\u7F6E\u6587\u4EF6\u4E2D\u7684namespace&lt;-mapperNS</span><br><span class="line">#log4j<span class="variable">.logger</span><span class="variable">.mapperNS</span> =TRACE</span><br></pre></td></tr></table></figure>
<p>到这里，所有的配置文件内容已经展示完毕，在我的环境中可以正常使用。</p>
]]></content>
      
        <categories>
            
            <category> Gradle </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Gradle </tag>
            
            <tag> SSM </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Gradle+IntelliJ-IDEA-2017-2搭建SSM项目(二)——build.gradl配置]]></title>
      <url>/2017/11/03/Gradle+IntelliJ-IDEA-2017-2%E6%90%AD%E5%BB%BASSM%E9%A1%B9%E7%9B%AE(%E4%BA%8C)%E2%80%94%E2%80%94build-gradl%E9%85%8D%E7%BD%AE/</url>
      <content type="html"><![CDATA[<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>本篇文章主要展示build.gradle文件的配置信息，代码上有大部分解释说明，如有其他问题请于文章下方讨论处提问。<br><a id="more"></a></p>
<h2 id="文件详细配置"><a href="#文件详细配置" class="headerlink" title="文件详细配置"></a>文件详细配置</h2><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br></pre></td><td class="code"><pre><span class="line">group <span class="string">'com.jiongzhu'</span></span><br><span class="line">version <span class="string">'1.0-SNAPSHOT'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//添加插件</span></span><br><span class="line">apply <span class="string">plugin:</span> <span class="string">'java'</span></span><br><span class="line">apply <span class="string">plugin:</span> <span class="string">'war'</span></span><br><span class="line">apply <span class="string">plugin:</span> <span class="string">'idea'</span></span><br><span class="line">apply <span class="string">from:</span> <span class="string">'https://raw.github.com/akhikhl/gretty/master/pluginScripts/gretty.plugin'</span></span><br><span class="line"></span><br><span class="line">sourceSets.main.resources.srcDirs = [<span class="string">'src/main/resources'</span>, <span class="string">'webapp'</span>]</span><br><span class="line"><span class="comment">//编码环境jdk版本</span></span><br><span class="line">sourceCompatibility = <span class="number">1.8</span></span><br><span class="line"><span class="comment">//编译时jdk版本</span></span><br><span class="line">targetCompatibility = <span class="number">1.8</span></span><br><span class="line"><span class="comment">//设置编码</span></span><br><span class="line">tasks.withType(JavaCompile) &#123;</span><br><span class="line">    options.encoding = <span class="string">'UTF-8'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//仓库的配置</span></span><br><span class="line">repositories &#123;</span><br><span class="line">    mavenLocal()    <span class="comment">//maven本地仓库，需要本地maven环境，当前安装maven-3.5.0</span></span><br><span class="line">    maven &#123; url <span class="string">"http://uk.maven.org/maven2/"</span> &#125; <span class="comment">//镜像不错</span></span><br><span class="line">    maven &#123; url <span class="string">"http://maven.aliyun.com/nexus/content/groups/public/"</span> &#125;  <span class="comment">//maven国内阿里镜像</span></span><br><span class="line">    jcenter()</span><br><span class="line">    mavenCentral()  <span class="comment">//maven中央仓库</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">configurations &#123;</span><br><span class="line">    mybatisGenerator</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置外部属性</span></span><br><span class="line">ext &#123;</span><br><span class="line">    spring_version = <span class="string">"4.3.10.RELEASE"</span></span><br><span class="line">    slf4j_version = <span class="string">"1.7.25"</span></span><br><span class="line">    <span class="comment">// 读取config文件夹中对应的配置文件</span></span><br><span class="line">    prop = <span class="keyword">new</span> Properties()</span><br><span class="line">    file(<span class="string">"src/main/resources/config/datasource.properties"</span>)</span><br><span class="line">            .withInputStream &#123;</span><br><span class="line">        prop.load(it)</span><br><span class="line">    &#125;</span><br><span class="line">    file(<span class="string">"src/main/resources/config/mybatis/gradle.properties"</span>)</span><br><span class="line">            .withInputStream &#123;</span><br><span class="line">        prop.load(it)</span><br><span class="line">    &#125;</span><br><span class="line">    prop.each &#123;</span><br><span class="line">        project.extensions.add(<span class="string">"$it.key"</span>,it.value)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//依赖的配置</span></span><br><span class="line">dependencies &#123;</span><br><span class="line">    <span class="comment">//和Maven类似，gradle导入依赖包也可以定义其作用的生命周期：</span></span><br><span class="line">    <span class="comment">//compile：编译时必须。</span></span><br><span class="line">    <span class="comment">//providedCompile : 编译时必须，不会写入war。</span></span><br><span class="line">    <span class="comment">//runtime：运行时必须，包括编译时。</span></span><br><span class="line">    <span class="comment">//testCompile：测试编译时必须。</span></span><br><span class="line">    <span class="comment">//testRuntime：测试运行时必须，包括编译时。</span></span><br><span class="line">    <span class="comment">//注：此外配置依赖包，还可以模块化配置、导入list、配置是否传递等。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//jsp、servlet</span></span><br><span class="line">    providedCompile (</span><br><span class="line">            <span class="string">"javax.servlet:javax.servlet-api:3.1.0"</span>,</span><br><span class="line">            <span class="string">"javax.servlet.jsp:jsp-api:2.2.1-b03"</span>,</span><br><span class="line">    )</span><br><span class="line"><span class="comment">//单元测试</span></span><br><span class="line">    testCompile <span class="string">"junit:junit:4.12"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//编译时依赖</span></span><br><span class="line">    compile (</span><br><span class="line">    <span class="comment">//jsvaee7</span></span><br><span class="line">            <span class="string">"javax:javaee-api:7.0"</span>,</span><br><span class="line">    <span class="comment">//jstl标签库</span></span><br><span class="line">            <span class="string">"taglibs:standard:1.1.2"</span>,</span><br><span class="line">            <span class="string">"javax.servlet:jstl:1.2"</span>,</span><br><span class="line">    <span class="comment">//公共资源包</span></span><br><span class="line">            <span class="string">"commons-logging:commons-logging:1.2"</span>,</span><br><span class="line">            <span class="string">"org.apache.commons:commons-lang3:3.6"</span>,</span><br><span class="line">            <span class="string">"org.apache.commons:commons-collections4:4.1"</span>,</span><br><span class="line">            <span class="string">"commons-beanutils:commons-beanutils:1.9.3"</span>,</span><br><span class="line">            <span class="string">"org.apache.commons:commons-dbcp2:2.1.1"</span>,</span><br><span class="line">            <span class="string">"org.apache.commons:commons-pool2:2.4.2"</span>,</span><br><span class="line">    <span class="comment">//文件上传</span></span><br><span class="line">            <span class="string">"commons-fileupload:commons-fileupload:1.3.3"</span>,</span><br><span class="line">            <span class="string">"commons-io:commons-io:2.5"</span>,</span><br><span class="line">    <span class="comment">//AspectJ（切点表达式）</span></span><br><span class="line">            <span class="string">"org.aspectj:aspectjrt:1.8.10"</span>,</span><br><span class="line">            <span class="string">"org.aspectj:aspectjweaver:1.8.10"</span>,</span><br><span class="line">    <span class="comment">//springmvc + Spring Configuration</span></span><br><span class="line">            <span class="string">"org.springframework:spring-web:$spring_version"</span>,</span><br><span class="line">            <span class="string">"org.springframework:spring-webmvc:$spring_version"</span>,</span><br><span class="line">            <span class="string">"org.springframework:spring-aop:$spring_version"</span>,</span><br><span class="line">            <span class="string">"org.springframework:spring-aspects:$spring_version"</span>,</span><br><span class="line">            <span class="string">"org.springframework:spring-beans:$spring_version"</span>,</span><br><span class="line">            <span class="string">"org.springframework:spring-context:$spring_version"</span>,</span><br><span class="line">            <span class="string">"org.springframework:spring-context-support:$spring_version"</span>,</span><br><span class="line">            <span class="string">"org.springframework:spring-core:$spring_version"</span>,</span><br><span class="line">            <span class="string">"org.springframework:spring-expression:$spring_version"</span>,</span><br><span class="line">            <span class="string">"org.springframework:spring-jdbc:$spring_version"</span>,</span><br><span class="line">            <span class="string">"org.springframework:spring-messaging:$spring_version"</span>,</span><br><span class="line">            <span class="string">"org.springframework:spring-orm:$spring_version"</span>,</span><br><span class="line">            <span class="string">"org.springframework:spring-tx:$spring_version"</span>,</span><br><span class="line">            <span class="string">"org.springframework:spring-test:$spring_version"</span>,</span><br><span class="line">    <span class="comment">//MyBatis</span></span><br><span class="line">            <span class="string">"org.mybatis:mybatis:3.4.4"</span>,</span><br><span class="line">    <span class="comment">//mybatis spring 插件</span></span><br><span class="line">            <span class="string">"org.mybatis:mybatis-spring:1.3.1"</span>,</span><br><span class="line">    <span class="comment">//mybatis generator 插件</span></span><br><span class="line">            <span class="string">'org.mybatis.generator:mybatis-generator-core:1.3.5'</span>,</span><br><span class="line">    <span class="comment">//mybatis basemapper 插件</span></span><br><span class="line">            <span class="string">'tk.mybatis:mapper:3.4.1'</span>,</span><br><span class="line">    <span class="comment">//数据库驱动，高版本与basemapper冲突</span></span><br><span class="line">            <span class="string">"mysql:mysql-connector-java:5.1.42"</span>,</span><br><span class="line">    <span class="comment">//数据库连接池，选择阿里的druid</span></span><br><span class="line">            <span class="string">"com.alibaba:druid:1.1.0"</span>,</span><br><span class="line">    <span class="comment">//json</span></span><br><span class="line">            <span class="string">"com.google.code.gson:gson:2.8.1"</span>,</span><br><span class="line">    <span class="comment">//log</span></span><br><span class="line">            <span class="string">"log4j:log4j:1.2.17"</span>,</span><br><span class="line">            <span class="string">"org.slf4j:slf4j-api:$slf4j_version"</span>,</span><br><span class="line">            <span class="string">"org.slf4j:slf4j-log4j12:$slf4j_version"</span>,</span><br><span class="line">    <span class="comment">//lombok，主要用于简化实体类代码，idea需要下载插件，自行百度</span></span><br><span class="line">            <span class="string">"org.projectlombok:lombok:1.16.18"</span>,</span><br><span class="line">    <span class="comment">//validator</span></span><br><span class="line">            <span class="string">"org.hibernate:hibernate-validator:5.4.1.Final"</span>,</span><br><span class="line">    <span class="comment">//freemarker</span></span><br><span class="line">            <span class="string">"org.freemarker:freemarker:2.3.26-incubating"</span></span><br><span class="line">    )</span><br><span class="line"><span class="comment">//mybatisGenerator</span></span><br><span class="line">    mybatisGenerator (</span><br><span class="line">            <span class="string">"mysql:mysql-connector-java:5.1.42"</span>,</span><br><span class="line">            <span class="string">"org.mybatis:mybatis:3.4.4"</span>,</span><br><span class="line">            <span class="string">"org.mybatis.generator:mybatis-generator-core:1.3.5"</span>,</span><br><span class="line">            <span class="string">"tk.mybatis:mapper:3.4.1"</span></span><br><span class="line">    )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 利用ant创建一个自动生成MyBatis目录文件的task，Gradle Tasks视图other-&gt;mybatisGenerate</span></span><br><span class="line">task mybatisGenerate &#123;</span><br><span class="line">    doLast &#123;</span><br><span class="line">        ant.properties[<span class="string">'targetProject'</span>] = projectDir.path</span><br><span class="line">        ant.properties[<span class="string">'jarDirection'</span>] = project[<span class="string">'jdbc.jarDirection'</span>]</span><br><span class="line">        ant.properties[<span class="string">'driverClass'</span>] = project[<span class="string">'jdbc.driverClassName'</span>]</span><br><span class="line">        ant.properties[<span class="string">'connectionURL'</span>] = project[<span class="string">'jdbc.url'</span>]</span><br><span class="line">        ant.properties[<span class="string">'userId'</span>] = project[<span class="string">'jdbc.username'</span>]</span><br><span class="line">        ant.properties[<span class="string">'password'</span>] = project[<span class="string">'jdbc.password'</span>]</span><br><span class="line">        ant.properties[<span class="string">'src_main_java'</span>] = sourceSets.main.java.srcDirs[<span class="number">0</span>].path</span><br><span class="line">        ant.properties[<span class="string">'src_main_resources'</span>] = sourceSets.main.resources.srcDirs[<span class="number">0</span>].path</span><br><span class="line">        ant.properties[<span class="string">'plugin'</span>] = project[<span class="string">'mapper.plugin'</span>]</span><br><span class="line">        ant.properties[<span class="string">'mapper'</span>] = project[<span class="string">'mapper.mapper'</span>]</span><br><span class="line">        ant.properties[<span class="string">'modelPackage'</span>] = project[<span class="string">'modelPackage'</span>]</span><br><span class="line">        ant.properties[<span class="string">'mapperPackage'</span>] = project[<span class="string">'mapperPackage'</span>]</span><br><span class="line">        ant.properties[<span class="string">'sqlMapperPackage'</span>] = project[<span class="string">'sqlMapperPackage'</span>]</span><br><span class="line">        ant.properties[<span class="string">'tableName'</span>] = project[<span class="string">'gererator.tableName'</span>]</span><br><span class="line">        ant.properties[<span class="string">'objectName'</span>] = project[<span class="string">'gererator.objectName'</span>]</span><br><span class="line">        ant.properties[<span class="string">'schema'</span>] = project[<span class="string">'gererator.schema'</span>]</span><br><span class="line"></span><br><span class="line">        ant.taskdef(</span><br><span class="line"><span class="symbol">                name:</span> <span class="string">'mbgenerator'</span>,</span><br><span class="line"><span class="symbol">                classname:</span> <span class="string">'org.mybatis.generator.ant.GeneratorAntTask'</span>,</span><br><span class="line"><span class="symbol">                classpath:</span> configurations.mybatisGenerator.asPath</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        ant.mbgenerator(<span class="string">overwrite:</span> <span class="literal">true</span>,</span><br><span class="line"><span class="symbol">                configfile:</span> <span class="string">'src/main/resources/config/mybatis/generatorConfig.xml'</span>,</span><br><span class="line"><span class="symbol">                verbose:</span> <span class="literal">true</span>) &#123;</span><br><span class="line">            propertyset &#123;</span><br><span class="line">                propertyref(<span class="string">name:</span> <span class="string">'targetProject'</span>)</span><br><span class="line">                propertyref(<span class="string">name:</span> <span class="string">'jarDirection'</span>)</span><br><span class="line">                propertyref(<span class="string">name:</span> <span class="string">'userId'</span>)</span><br><span class="line">                propertyref(<span class="string">name:</span> <span class="string">'driverClass'</span>)</span><br><span class="line">                propertyref(<span class="string">name:</span> <span class="string">'connectionURL'</span>)</span><br><span class="line">                propertyref(<span class="string">name:</span> <span class="string">'password'</span>)</span><br><span class="line">                propertyref(<span class="string">name:</span> <span class="string">'src_main_java'</span>)</span><br><span class="line">                propertyref(<span class="string">name:</span> <span class="string">'src_main_resources'</span>)</span><br><span class="line">                propertyref(<span class="string">name:</span> <span class="string">'plugin'</span>)</span><br><span class="line">                propertyref(<span class="string">name:</span> <span class="string">'mapper'</span>)</span><br><span class="line">                propertyref(<span class="string">name:</span> <span class="string">'modelPackage'</span>)</span><br><span class="line">                propertyref(<span class="string">name:</span> <span class="string">'mapperPackage'</span>)</span><br><span class="line">                propertyref(<span class="string">name:</span> <span class="string">'sqlMapperPackage'</span>)</span><br><span class="line">                propertyref(<span class="string">name:</span> <span class="string">'tableName'</span>)</span><br><span class="line">                propertyref(<span class="string">name:</span> <span class="string">'objectName'</span>)</span><br><span class="line">                propertyref(<span class="string">name:</span> <span class="string">'schema'</span>)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//gretty配置，从gradle4.0开始，配置jetty不能再直接使用plugin:jetty，需要使用gretty</span></span><br><span class="line"><span class="comment">//启动项目，Gradle Tasks视图gretty-&gt;jettyRun/tomcatRun</span></span><br><span class="line">gretty &#123;</span><br><span class="line">    servletContainer = <span class="string">'tomcat8'</span> <span class="comment">//支持jetty7/8/9，tomcat7/8</span></span><br><span class="line">    contextPath = <span class="string">'/'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> Gradle </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Gradle </tag>
            
            <tag> SSM </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Gradle+IntelliJ-IDEA-2017-2搭建SSM项目(一)——创建项目]]></title>
      <url>/2017/11/03/Gradle+IntelliJ-IDEA-2017-2%E6%90%AD%E5%BB%BASSM%E9%A1%B9%E7%9B%AE(%E4%B8%80)%E2%80%94%E2%80%94%E5%88%9B%E5%BB%BA%E9%A1%B9%E7%9B%AE/</url>
      <content type="html"><![CDATA[<h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><ul>
<li>OpenJDK 1.8.0_131</li>
<li>Gradle 4.3</li>
<li>Intellij Idea 2017.2</li>
</ul>
<p>为了便于管理Gradle本地仓库，首先创建系统变量GRADLE_USER_HOME，并将值指向自定义的.gradle目录(如/home/jiongzhu/文档/repository/.gradle)。<br>在.gradle文件夹下创建文件gradle.properties，内容如下：<br><a id="more"></a></p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">org<span class="selector-class">.gradle</span><span class="selector-class">.daemon</span>=true</span><br></pre></td></tr></table></figure>
<p>据说可以提高Gradle的编译速度。<br>然后在.gradle文件夹下创建文件init.gradle，内容如下:<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">allprojects&#123;</span><br><span class="line">    repositories &#123;</span><br><span class="line">        <span class="keyword">def</span> REPOSITORY_URL = <span class="string">'http://maven.aliyun.com/nexus/content/groups/public/'</span></span><br><span class="line">        all &#123; ArtifactRepository repo -&gt;</span><br><span class="line">            <span class="keyword">if</span>(repo <span class="keyword">instanceof</span> MavenArtifactRepository)&#123;</span><br><span class="line">                <span class="keyword">def</span> url = repo.url.toString()</span><br><span class="line">                <span class="keyword">if</span> (url.startsWith(<span class="string">'https://repo1.maven.org/maven2'</span>) || url.startsWith(<span class="string">'https://jcenter.bintray.com/'</span>)) &#123;</span><br><span class="line">                    project.logger.lifecycle <span class="string">"Repository $&#123;repo.url&#125; replaced by $REPOSITORY_URL."</span></span><br><span class="line">                    remove repo</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        maven &#123;</span><br><span class="line">            url REPOSITORY_URL</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>将速度比较慢的mavenCentral()与jcenter()远程仓库镜像替换为速度较快的镜像，这里配置的是aliyun的maven中央仓库。<br>另外我收集的可用镜像还有如下：<br><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">http://maven.aliyun.com/nexus/content/groups/public/</span></span><br><span class="line"><span class="attribute">http://repo1.maven.org/maven2/</span></span><br><span class="line"><span class="attribute">http://repo2.maven.org/maven2/</span></span><br><span class="line"><span class="attribute">http://uk.maven.org/maven2/</span></span><br><span class="line"><span class="attribute">http://repository.sonatype.org/content/groups/public/</span></span><br><span class="line"><span class="attribute">http://repository.jboss.org/nexus/content/groups/public/</span></span><br><span class="line"><span class="attribute">http://maven.ibiblio.org/maven2/</span></span><br><span class="line"><span class="attribute">http://maven-central.storage.googleapis.com</span></span><br></pre></td></tr></table></figure></p>
<p>前期准备工作完成。</p>
<h2 id="开始创建"><a href="#开始创建" class="headerlink" title="开始创建"></a>开始创建</h2><h3 id="创建Java-Web项目"><a href="#创建Java-Web项目" class="headerlink" title="创建Java Web项目"></a>创建Java Web项目</h3><p>首先需要创建一个基于Gradle的Java Web项目，可以参考我的上一篇文章<a href="http://zhuxuanyu.top/2017/08/04/Gradle+IntelliJ-IDEA-2017-2创建Java-Web项目/">Gradle+IntelliJ-IDEA-2017-2创建Java-Web项目</a>。创建完的项目结构如下图所示。<br><img src="http://cdn.zhuj.top//blog/20190222/0uUf4xl4A0Hn.png"></p>
<h3 id="创建基本包结构与资源文件结构"><a href="#创建基本包结构与资源文件结构" class="headerlink" title="创建基本包结构与资源文件结构"></a>创建基本包结构与资源文件结构</h3><p>在src/main/java下，创建包com.jiongzhu，然后在其下创建如下几个包控制器controller，实体接口mapper，实体model，服务service，工具util。<br>在src/main/resources下，创建包config，然后在其下创建如下几个包mapper(实体映射配置文件)，mybatis(自动生成实体、实体映射、实体接口)，spring(springMVC配置)。<br><img src="http://cdn.zhuj.top//blog/20190222/PUoGg0fQySDR.png?imageslim"></p>
<h3 id="创建部分资源配置文件和静态资源文件结构"><a href="#创建部分资源配置文件和静态资源文件结构" class="headerlink" title="创建部分资源配置文件和静态资源文件结构"></a>创建部分资源配置文件和静态资源文件结构</h3><p>在mybatis包下创建generatorConfig.xml，用于mybatisGenerator的相关配置，通过mybatisGenerator配合通用BaseMapper接口可以自动生成实体、实体映射、实体接口，自行创建BaseService后，用户自定义的业务Service可以继承BaseService，直接使用其相关的增删改查等操作，用户只需要编写BaseService没有的方法即可。<br>在mybatis包下创建gradle.properties，用于generatorConfig.xml的部分参数配置。<br>在spring包下创建spring-mvc.xml，主要用于控制器的自动注入，静态资源映射配置，启用注解，视图解析器的配置等。<br>在spring包下创建spring-mybatis.xml，主要用于service的自动注入，数据库连接池的配置，mapper接口与mapper映射的自动扫描注册，日志管理，事务管理等。<br>在config包根路径下创建datasource.properties，用于数据库连接池的参数配置。<br>在config包根路径下创建log4j.properties，用于日志的配置。<br>基本文件结构如下。<br><img src="http://cdn.zhuj.top//blog/20190222/IllqWAWnr1mX.png?imageslim"><br>如上图所示，我们还在webapp/WEB-INF目录下创建了statis、views两个文件夹，在statics文件夹下创建了css、fonts、img、js文件夹，在views文件夹下创建了html、jsp文件夹，用来放置相关的静态资源文件。</p>
<h3 id="IDEA项目结构与模块配置"><a href="#IDEA项目结构与模块配置" class="headerlink" title="IDEA项目结构与模块配置"></a>IDEA项目结构与模块配置</h3><p>File-&gt;Project Structure-&gt;Moudles-&gt;GradleSSMDemo-&gt;Spring-&gt;点击”+”号，勾选已经创建的spring-mvc.xml文件和spring-mybatis.xml文件。<br><img src="http://cdn.zhuj.top//blog/20190222/W4w71fumI6mv.png?imageslim"></p>
<p>下篇文章主要展示我的build.gradle配置文件的内容。</p>
]]></content>
      
        <categories>
            
            <category> Gradle </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Gradle </tag>
            
            <tag> SSM </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Gradle+IntelliJ-IDEA-2017-2创建Java-Web项目]]></title>
      <url>/2017/11/03/Gradle+IntelliJ-IDEA-2017-2%E5%88%9B%E5%BB%BAJava-Web%E9%A1%B9%E7%9B%AE/</url>
      <content type="html"><![CDATA[<h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><ul>
<li>OpenJDK 1.8.0_131</li>
<li>Gradle 4.3</li>
<li>Intellij Idea 2017.2</li>
</ul>
<h2 id="开始搭建"><a href="#开始搭建" class="headerlink" title="开始搭建"></a>开始搭建</h2><p>1.首先进入Idea的新建项目窗口，选择新建“Gradle”项目，同时进行相应的配置，包括JDK环境、Java和Web环境框架的勾选。next。<br><a id="more"></a><br><img src="http://cdn.zhuj.top//blog/20190222/xI7lqdT6tGSN.png?imageslim"><br>2.设置项目组织唯一标识、项目唯一标识和项目版本。<br>GroupID是项目组织唯一的标识符，实际对应JAVA的包的结构，是main目录里java的目录结构。<br>ArtifactID就是项目的唯一的标识符，实际对应项目的名称，就是项目根目录的名称。<br>一般来说，包的命名习惯是域名的反过来,根据个人习惯加上公司或者个人的名称。如：www.jiongzhu.com -&gt; com.jiongzhu.gradleDemo。那么都知道，gradleDemo是项目名称，也是在最后面的，所以项目组织的唯一标识符(groupId)对应com.jiongzhu, 项目的唯一标识符（ArtifactId）对应gradleDemo，这样你就知道大概对应填些什么东西了。next。<br><img src="http://cdn.zhuj.top//blog/20190222/vQE8Auxc3Wyq.png?imageslim"><br>3.这个页面，刚进来默认选择的是Use default gradle wrapper(recommended), 我不选择这个是因为我本地有装gradle，所有不需要用idea默认的，如果选择它，那么创建项目之后，它就会去自动下载gradle，然后配置好，下载过程一般都很慢，使用体验一般。所有我选择的是Use local gradle distribution。然后最上面的一个选项是设置当gradle的依赖配置改变时，会自动进行jar包的删除和导入，这里我们选择手动更新，第二个选项是自动创建空的根目录文件夹，如果不选择，创建完的项目会没有java、resources等文件夹，所以勾选，让它自动创建。next。<br><img src="http://cdn.zhuj.top//blog/20190222/rLVhhVQBkjND.png?imageslim"><br>4.这是项目新建完成的层级结构，已经有了Java Web项目的基本结构。<br><img src="http://cdn.zhuj.top//blog/20190222/mMJqqC6E9EEW.png?imageslim"><br>5.依次选择file-&gt;Project Structure-&gt;Moudles/Facets，点击Deployment Descriptors右侧的“+”号新建web.xml文件，注意路径设置为\gradleDemo\src\main\webapp\WEB-INF\web.xml。next。<br><img src="http://cdn.zhuj.top//blog/20190222/PYG4S5nudjeG.png?imageslim"><br>6.新建web.xml后，勾选“java”为Source Roots。next。<br><img src="http://cdn.zhuj.top//blog/20190222/bxTueAy4O4rj.png?imageslim"><br>7.build.gradle的初始内容如下图所示。<br><img src="http://cdn.zhuj.top//blog/20190222/lF4P0xLrbedU.png?imageslim"><br>8.如下图, 左侧是成功创建的项目文件目录，如果之前没有勾选Create directories for empty content roots automatically，那么就不会生成java和resource这个两个空文件夹。<br><img src="http://cdn.zhuj.top//blog/20190222/0uUf4xl4A0Hn.png?imageslim"><br>9.创建完成之后，如果你之前没有配置tomcat的话，是没办法运行的，所以也需要配置tomcat，依次点击右上角的”倒三角”-&gt;Edit Configurations…-&gt;”+”-&gt;Tomcat Server-&gt;Local。<br><img src="http://cdn.zhuj.top//blog/20190222/CWeOhdHtJjee.png?imageslim"><br>10.Tomcat Server的基本配置，包括服务器的名称，本地tomcat的路径。<br><img src="http://cdn.zhuj.top//blog/20190222/iEnFN4Hr6fwP.png?imageslim"><br>11.点击“Server”右侧的“Deployment”，点击“+”号，选择带有(deploded) 的Artifacts作为部署的选择，配置Application context：/gradleDemo，如果不作输入，则访问地址为：localhost:8080，当前访问地址为localhost:8080/gradleDemo。点击“Apply”应用-&gt;“OK”。<br><img src="http://cdn.zhuj.top//blog/20190222/1AugzAz3LabD.png?imageslim"><br>12.编辑index.jsp的内容，用于校验项目搭建是否成功，输入正文内容“Hello World！”。<br><img src="http://cdn.zhuj.top//blog/20190222/LOQfHTmF9x9U.png?imageslim"><br>13.点击右上角服务器后的绿色三角形启动按钮，启动刚刚配置的Tomcat8.5，观察控制台输出。<br><img src="http://cdn.zhuj.top//blog/20190222/fNVYecJ3SI2L.png?imageslim"><br>14.最后一步，进入浏览器观察项目运行结果，项目搭建完成。<br><img src="http://cdn.zhuj.top//blog/20190222/LtailEOxxe0t.png?imageslim"></p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[Gradle构建基础]]></title>
      <url>/2017/11/03/Gradle%E6%9E%84%E5%BB%BA%E5%9F%BA%E7%A1%80/</url>
      <content type="html"><![CDATA[<h2 id="Projects-和-tasks"><a href="#Projects-和-tasks" class="headerlink" title="Projects 和 tasks"></a>Projects 和 tasks</h2><p>projects 和 tasks是 Gradle 中最重要的两个概念。<br>任何一个 Gradle 构建都是由一个或多个 projects 组成。每个 project 包括许多可构建组成部分。 这完全取决于你要构建些什么。举个例子，每个 project 或许是一个 jar 包或者一个 web 应用，它也可以是一个由许多其他项目中产生的 jar 构成的 zip 压缩包。一个 project 不必描述它只能进行构建操作。它也可以部署你的应用或搭建你的环境。不要担心它像听上去的那样庞大。 Gradle 的 build-by-convention 可以让您来具体定义一个 project 到底该做什么。<br>每个 project 都由多个 tasks 组成。每个 task 都代表了构建执行过程中的一个原子性操作。如编译，打包，生成 javadoc，发布到某个仓库等操作。<br>到目前为止，可以发现我们可以在一个 project 中定义一些简单任务，后续章节将会阐述多项目构建和多项目多任务的内容。<br><a id="more"></a></p>
<h3 id="Hello-world"><a href="#Hello-world" class="headerlink" title="Hello world"></a>Hello world</h3><p>你可以通过在命令行运行 gradle 命令来执行构建，gradle 命令会从当前目录下寻找 build.gradle 文件来执行构建。我们称 build.gradle 文件为构建脚本。严格来说这其实是一个构建配置脚本，后面你会了解到这个构建脚本定义了一个 project 和一些默认的 task。<br>你可以创建如下脚本到 build.gradle 中，第一个构建脚本</p>
<p>build.gradle</p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">task</span> hello &#123;</span><br><span class="line">     <span class="keyword">doLast</span> &#123;</span><br><span class="line">     	<span class="keyword">println</span> <span class="string">'Hello world!'</span></span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>然后在该文件所在目录执行 gradle -q hello</p>
<blockquote>
<p>-q 参数的作用是什么?</p>
<p>该文档的示例中很多地方在调用 gradle 命令时都加了 -q 参数。该参数用来控制 gradle 的日志级别，可以保证只输出我们需要的内容。</p>
</blockquote>
<p>执行脚本</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Output of gradle -<span class="selector-tag">q</span> hello</span><br><span class="line">&gt; gradle -<span class="selector-tag">q</span> hello</span><br><span class="line">Hello world!</span><br></pre></td></tr></table></figure>
<p>上面的脚本定义了一个叫做 hello 的 task，并且给它添加了一个动作。当执行 gradle hello 的时候, Gralde 便会去调用 hello 这个任务来执行给定操作。这些操作其实就是一个用 groovy 书写的闭包。</p>
<p>如果你觉得它看上去跟 Ant 中的 targets 很像，那么是对的。Gradle 的 tasks 就相当于 Ant 中的 targets。不过你会发现他功能更加强大。我们只是换了一个比 target 更形象的另外一个术语。不幸的是这恰巧与 Ant 中的术语有些冲突。ant 命令中有诸如 javac、copy、tasks。所以当该文档中提及 tasks 时，除非特别指明 ant task。否则指的均是指 Gradle 中的 tasks。</p>
<h3 id="快速定义任务"><a href="#快速定义任务" class="headerlink" title="快速定义任务"></a>快速定义任务</h3><p>用一种更简洁的方式来定义上面的 hello 任务。</p>
<p>build.gradle</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">task hello &lt;&lt; &#123;</span><br><span class="line">	println <span class="string">'Hello world!'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>上面的脚本又一次采用闭包的方式来定义了一个叫做 hello 的任务，本文档后续部分中我们将会更多的采用这种风格来定义任务。</p>
<h3 id="代码即脚本"><a href="#代码即脚本" class="headerlink" title="代码即脚本"></a>代码即脚本</h3><p>Gradle 脚本采用 Groovy 书写，作为开胃菜,看下下面这几个例子。<br>build.gradle</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">task upper &lt;&lt; &#123;</span><br><span class="line">	String someString = <span class="string">'mY_nAmE'</span></span><br><span class="line">	println <span class="string">"Original: "</span> + someString</span><br><span class="line">	println <span class="string">"Upper case: "</span> + someString.toUpperCase()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>执行脚本</p>
<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&gt; gradle -q upper</span></span><br><span class="line"><span class="string"></span><span class="attr">Original:</span> <span class="string">mY_nAmE</span></span><br><span class="line"><span class="string">Upper</span> <span class="attr">case:</span> <span class="string">MY_NAME</span></span><br></pre></td></tr></table></figure>
<p>或者</p>
<p>build.gradle</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">task count &lt;&lt; &#123;</span><br><span class="line">    <span class="number">4.</span>times &#123; print <span class="string">"$it "</span> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>执行脚本</p>
<figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; gradle -q count</span><br><span class="line"><span class="number">0</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span></span><br></pre></td></tr></table></figure>
<h3 id="任务依赖"><a href="#任务依赖" class="headerlink" title="任务依赖"></a>任务依赖</h3><p>你可以按如下方式创建任务间的依赖关系，在两个任务之间指明依赖关系</p>
<p>build.gradle</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">task hello &lt;&lt; &#123;</span><br><span class="line">	println <span class="string">'Hello world!'</span></span><br><span class="line">&#125;</span><br><span class="line">task intro(<span class="string">dependsOn:</span> hello) &lt;&lt; &#123;</span><br><span class="line">    println <span class="string">"I'm Gradle"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>执行脚本</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> gradle -q intro</span></span><br><span class="line">Hello world!</span><br><span class="line">I'm Gradle</span><br></pre></td></tr></table></figure>
<p>添加依赖 task 也可以不必首先声明被依赖的 task。</p>
<h3 id="延迟依赖"><a href="#延迟依赖" class="headerlink" title="延迟依赖"></a>延迟依赖</h3><p>build.gradle</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">task taskX(<span class="string">dependsOn:</span> <span class="string">'taskY'</span>) &lt;&lt; &#123;</span><br><span class="line">    println <span class="string">'taskX'</span></span><br><span class="line">&#125;</span><br><span class="line">task taskY &lt;&lt; &#123;</span><br><span class="line">    println <span class="string">'taskY'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>执行脚本</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> gradle -q taskX</span></span><br><span class="line">taskY</span><br><span class="line">taskX</span><br></pre></td></tr></table></figure>
<p>可以看到，taskX 是 在 taskY 之前定义的，这在多项目构建中非常有用。<br>注意:当引用的任务尚未定义的时候不可使用短标记法来运行任务。</p>
<h3 id="动态任务"><a href="#动态任务" class="headerlink" title="动态任务"></a>动态任务</h3><p>借助 Groovy 的强大不仅可以定义简单任务还能做更多的事。例如，可以动态定义任务。</p>
<p>build.gradle</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">4.</span>times &#123; counter -&gt;</span><br><span class="line">    task <span class="string">"task$counter"</span> &lt;&lt; &#123;</span><br><span class="line">        println <span class="string">"I'm task number $counter"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>执行脚本</p>
<figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; gradle -q task1</span><br><span class="line">I<span class="symbol">'m</span> <span class="keyword">task</span> number <span class="number">1</span></span><br></pre></td></tr></table></figure>
<h3 id="任务操纵"><a href="#任务操纵" class="headerlink" title="任务操纵"></a>任务操纵</h3><p>一旦任务被创建后，任务之间可以通过 API 进行相互访问。这也是与 Ant 的不同之处。比如可以增加一些依赖。</p>
<h4 id="通过-API-进行任务之间的通信-增加依赖"><a href="#通过-API-进行任务之间的通信-增加依赖" class="headerlink" title="通过 API 进行任务之间的通信 - 增加依赖"></a>通过 API 进行任务之间的通信 - 增加依赖</h4><p>build.gradle</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">4.</span>times &#123; counter -&gt;</span><br><span class="line">    task <span class="string">"task$counter"</span> &lt;&lt; &#123;</span><br><span class="line">        println <span class="string">"I'm task number $counter"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">task0.dependsOn task2, task3</span><br></pre></td></tr></table></figure>
<p>执行脚本</p>
<figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; gradle -q task0</span><br><span class="line">I<span class="symbol">'m</span> <span class="keyword">task</span> number <span class="number">2</span></span><br><span class="line">I<span class="symbol">'m</span> <span class="keyword">task</span> number <span class="number">3</span></span><br><span class="line">I<span class="symbol">'m</span> <span class="keyword">task</span> number <span class="number">0</span></span><br></pre></td></tr></table></figure>
<h4 id="通过-API-进行任务之间的通信-增加任务行为"><a href="#通过-API-进行任务之间的通信-增加任务行为" class="headerlink" title="通过 API 进行任务之间的通信 - 增加任务行为"></a>通过 API 进行任务之间的通信 - 增加任务行为</h4><p>build.gradle</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">task hello &lt;&lt; &#123;</span><br><span class="line">    println <span class="string">'Hello Earth'</span></span><br><span class="line">&#125;</span><br><span class="line">hello.doFirst &#123;</span><br><span class="line">    println <span class="string">'Hello Venus'</span></span><br><span class="line">&#125;</span><br><span class="line">hello.doLast &#123;</span><br><span class="line">    println <span class="string">'Hello Mars'</span></span><br><span class="line">&#125;</span><br><span class="line">hello &lt;&lt; &#123;</span><br><span class="line">    println <span class="string">'Hello Jupiter'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>执行脚本</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> gradle -q hello</span></span><br><span class="line">Hello Venus</span><br><span class="line">Hello Earth</span><br><span class="line">Hello Mars</span><br><span class="line">Hello Jupiter</span><br></pre></td></tr></table></figure>
<p>doFirst 和 doLast 可以进行多次调用。他们分别被添加在任务的开头和结尾。当任务开始执行时这些动作会按照既定顺序进行。其中 &lt;&lt; 操作符 是 doLast 的简写方式。</p>
<h4 id="短标记法"><a href="#短标记法" class="headerlink" title="短标记法"></a>短标记法</h4><p>你早就注意到了吧，没错，每个任务都是一个脚本的属性，你可以访问它:</p>
<p>build.gradle</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">task hello &lt;&lt; &#123;</span><br><span class="line">    println <span class="string">'Hello world!'</span></span><br><span class="line">&#125;</span><br><span class="line">hello.doLast &#123;</span><br><span class="line">    println <span class="string">"Greetings from the $hello.name task."</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>执行脚本</p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; gradle -q hello</span><br><span class="line">Hello world!</span><br><span class="line">Greetings <span class="keyword">from</span> the hello <span class="keyword">task</span>.</span><br></pre></td></tr></table></figure>
<p>对于插件提供的内置任务。这尤其方便(例如:complie)</p>
<h3 id="增加自定义属性"><a href="#增加自定义属性" class="headerlink" title="增加自定义属性"></a>增加自定义属性</h3><p>你可以为一个任务添加额外的属性。例如,新增一个叫做 myProperty 的属性，用 ext.myProperty 的方式给他一个初始值，这样便增加了一个自定义属性。</p>
<p>build.gradle</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">task myTask &#123;</span><br><span class="line">    ext.myProperty = <span class="string">"myValue"</span></span><br><span class="line">&#125;</span><br><span class="line">task printTaskProperties &lt;&lt; &#123;</span><br><span class="line">    println myTask.myProperty</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>执行脚本</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> gradle -q printTaskProperties</span></span><br><span class="line">myValue</span><br></pre></td></tr></table></figure>
<p>自定义属性不仅仅局限于任务上，还可以做更多事情。</p>
<h3 id="调用-Ant-任务"><a href="#调用-Ant-任务" class="headerlink" title="调用 Ant 任务"></a>调用 Ant 任务</h3><p>Ant 任务是 Gradle 中的一等公民。Gradle 借助 Groovy 对 Ant 任务进行了优秀的整合。Gradle 自带了一个 AntBuilder，在 Gradle 中调用 Ant 任务比在 build.xml 中调用更加的方便和强大。 通过下面的例子你可以学到如何调用一个 Ant 任务以及如何与 Ant 中的属性进行通信。<br><strong>利用 AntBuilder 执行 ant.loadfile</strong></p>
<p>build.gradle</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">task loadfile &lt;&lt; &#123;</span><br><span class="line">    <span class="keyword">def</span> files = file(<span class="string">'../antLoadfileResources'</span>).listFiles().sort()</span><br><span class="line">    files.each &#123; File file -&gt;</span><br><span class="line">        <span class="keyword">if</span> (file.isFile()) &#123;</span><br><span class="line">            ant.loadfile(<span class="string">srcFile:</span> file, <span class="string">property:</span> file.name)</span><br><span class="line">            println <span class="string">" *** $file.name ***"</span></span><br><span class="line">            println <span class="string">"$&#123;ant.properties[file.name]&#125;"</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>执行脚本</p>
<figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&gt; gradle -q loadfile</span><br><span class="line">*** agile.manifesto.txt ***</span><br><span class="line">Individuals <span class="keyword">and</span> interactions over processes <span class="keyword">and</span> tools</span><br><span class="line">Working software over comprehensive documentation</span><br><span class="line">Customer collaboration  over contract negotiation</span><br><span class="line">Responding <span class="keyword">to</span> change over following a plan</span><br><span class="line"> *** gradle.manifesto.txt ***</span><br><span class="line">Make the impossible possible, make the possible easy <span class="keyword">and</span> make the easy elegant.</span><br><span class="line">(inspired by Moshe Feldenkrais)</span><br></pre></td></tr></table></figure>
<h3 id="方法抽取"><a href="#方法抽取" class="headerlink" title="方法抽取"></a>方法抽取</h3><p>Gradle 的强大要看你如何编写脚本逻辑。针对上面的例子，首先要做的就是要抽取方法。<br><strong>利用方法组织脚本逻辑</strong></p>
<p>build.gradle</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">task checksum &lt;&lt; &#123;</span><br><span class="line">    fileList(<span class="string">'../antLoadfileResources'</span>).each &#123;File file -&gt;</span><br><span class="line">        ant.checksum(<span class="string">file:</span> file, <span class="string">property:</span> <span class="string">"cs_$file.name"</span>)</span><br><span class="line">        println <span class="string">"$file.name Checksum: $&#123;ant.properties["</span>cs_$file.name<span class="string">"]&#125;"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">task loadfile &lt;&lt; &#123;</span><br><span class="line">    fileList(<span class="string">'../antLoadfileResources'</span>).each &#123;File file -&gt;</span><br><span class="line">        ant.loadfile(<span class="string">srcFile:</span> file, <span class="string">property:</span> file.name)</span><br><span class="line">        println <span class="string">"I'm fond of $file.name"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">File[] fileList(String dir) &#123;</span><br><span class="line">    file(dir).listFiles(&#123;file -&gt; file.isFile() &#125; <span class="keyword">as</span> FileFilter).sort()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>执行脚本</p>
<figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; gradle -q loadfile</span><br><span class="line">I<span class="symbol">'m</span> fond <span class="keyword">of</span> agile.manifesto.txt</span><br><span class="line">I<span class="symbol">'m</span> fond <span class="keyword">of</span> gradle.manifesto.txt</span><br></pre></td></tr></table></figure>
<p>在后面的章节你会看到类似出去出来的方法可以在多项目构建中的子项目中调用。无论构建逻辑多复杂，Gradle 都可以提供给你一种简便的方式来组织它们。<br><strong>定义默认任务</strong></p>
<p>Gradle 允许在脚本中定义多个默认任务。</p>
<p>build.gradle</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">defaultTasks <span class="string">'clean'</span>, <span class="string">'run'</span></span><br><span class="line">task clean &lt;&lt; &#123;</span><br><span class="line">    println <span class="string">'Default Cleaning!'</span></span><br><span class="line">&#125;</span><br><span class="line">task run &lt;&lt; &#123;</span><br><span class="line">    println <span class="string">'Default Running!'</span></span><br><span class="line">&#125;</span><br><span class="line">task other &lt;&lt; &#123;</span><br><span class="line">    println <span class="string">"I'm not a default task!"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>执行脚本</p>
<figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; gradle -q</span><br><span class="line">Default Cleaning!</span><br><span class="line">Default Running!</span><br></pre></td></tr></table></figure>
<p>这与直接调用 gradle clean run 效果是一样的。在多项目构建中，每个子项目都可以指定单独的默认任务。如果子项目未进行指定将会调用父项目指定的的默认任务。</p>
<h2 id="Configure-by-DAG"><a href="#Configure-by-DAG" class="headerlink" title="Configure by DAG"></a>Configure by DAG</h2><p>稍后会对 Gradle 的配置阶段和运行阶段进行详细说明 配置阶段后，Gradle 会了解所有要执行的任务 Gradle 提供了一个钩子来捕获这些信息。一个例子就是可以检查已经执行的任务中有没有被释放。借由此，你可以为一些变量赋予不同的值。<br>在下面的例子中，为 distribution 和 release 任务赋予了不同的 version 值。<br>依赖任务的不同输出</p>
<p>build.gradle</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">task distribution &lt;&lt; &#123;</span><br><span class="line">    println <span class="string">"We build the zip with version=$version"</span></span><br><span class="line">&#125;</span><br><span class="line">task release(<span class="string">dependsOn:</span> <span class="string">'distribution'</span>) &lt;&lt; &#123;</span><br><span class="line">    println <span class="string">'We release now'</span></span><br><span class="line">&#125;</span><br><span class="line">gradle.taskGraph.whenReady &#123;taskGraph -&gt;</span><br><span class="line">    <span class="keyword">if</span> (taskGraph.hasTask(release)) &#123;</span><br><span class="line">        version = <span class="string">'1.0'</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        version = <span class="string">'1.0-SNAPSHOT'</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>执行脚本</p>
<figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; gradle -q distribution</span><br><span class="line">We build <span class="keyword">the</span> zip <span class="keyword">with</span> <span class="built_in">version</span>=<span class="number">1.0</span>-SNAPSHOT</span><br></pre></td></tr></table></figure>
<p>执行脚本</p>
<figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; gradle -q release</span><br><span class="line">We build <span class="keyword">the</span> zip <span class="keyword">with</span> <span class="built_in">version</span>=<span class="number">1.0</span></span><br><span class="line">We release now</span><br></pre></td></tr></table></figure>
<p>whenReady 会在已发布的任务之前影响到已发布任务的执行。即使已发布的任务不是主要任务(也就是说，即使这个任务不是通过命令行直接调用)</p>
]]></content>
      
        <categories>
            
            <category> Gradle </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Gradle </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Gradle的安装]]></title>
      <url>/2017/11/03/Gradle%E7%9A%84%E5%AE%89%E8%A3%85/</url>
      <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>　　上一篇文章从Gradle与Apache ant、Maven的构建过程进行了横向比较，在此首先总结一下Gradle的优点：</p>
<ul>
<li>按约定声明构建和建设</li>
<li>强大的支持多工程的构建</li>
<li>强大的依赖管理（基于Apache Ivy），提供最大的便利去构建工程</li>
<li>全力支持已有的 Maven 或者Ivy仓库基础建设</li>
<li>支持传递性依赖管理，在不需要远程仓库和pom.xml和ivy配置文件的前提下</li>
<li>基于groovy脚本构建，其build脚本使用groovy语言编写</li>
<li>具有广泛的领域模型支持构建</li>
<li>深度 API</li>
<li>易迁移</li>
<li>自由和开放源码，Gradle是一个开源项目，基于 ASL 许可<a id="more"></a>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2></li>
</ul>
<h3 id="安装前的准备"><a href="#安装前的准备" class="headerlink" title="安装前的准备"></a>安装前的准备</h3><p>Gradle可以在几乎所有的主流操作系统上运行，但是必须需要JDK7或者JRE7以上版本的支持。为了验证是否支持Gradle，请执行 ：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -version</span><br></pre></td></tr></table></figure>
<p>如果命令执行成功，应该会得到类似如下输出：</p>
<figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">openjdk version <span class="string">"1.8.0_131"</span></span><br><span class="line">OpenJDK Runtime Environment (build 1.8.0_131-8u131-b11-2ubuntu1.16.04.3-b11)</span><br><span class="line">OpenJDK 64-Bit<span class="built_in"> Server </span>VM (build 25.131-b11, mixed mode)</span><br></pre></td></tr></table></figure>
<p>如果没有安装JDK、JRE环境，或者安装的版本低于7，请自行安装。</p>
<h3 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h3><h4 id="使用包管理器安装"><a href="#使用包管理器安装" class="headerlink" title="使用包管理器安装"></a>使用包管理器安装</h4><p>基于Unix的系统可以通过SDKMAN安装</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sdk install gradle 4.3</span><br></pre></td></tr></table></figure>
<p>MacOS系统可以通过Homebrew安装</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ brew update &amp;&amp; brew install gradle</span><br></pre></td></tr></table></figure>
<p>Windows系统下可以通过Scoop安装</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ scoop install gradle</span><br></pre></td></tr></table></figure>
<h4 id="下载安装包安装"><a href="#下载安装包安装" class="headerlink" title="下载安装包安装"></a>下载安装包安装</h4><p><strong>第一步：下载最新的Gradle发行版本</strong></p>
<p>目前Gradle最新版本是于2017年10月30日发布的Gradle 4.3，zip文件下载地址为：</p>
<ul>
<li><a href="https://services.gradle.org/distributions/gradle-4.3-bin.zip" target="_blank" rel="noopener">二进制文件</a></li>
<li><a href="https://services.gradle.org/distributions/gradle-4.3-all.zip" target="_blank" rel="noopener">完整版</a>(包含文档和源代码)</li>
</ul>
<p>如果不知如何选择，Gradle官方推荐下载二进制文件版本，然后在线浏览<a href="https://docs.gradle.org/current" target="_blank" rel="noopener">文档</a>和<a href="https://github.com/gradle/gradle" target="_blank" rel="noopener">源代码</a>。</p>
<p>如果需要下载更老的版本，可以查看<a href="https://gradle.org/releases" target="_blank" rel="noopener">发行页面</a>。</p>
<p><strong>第二步：解压发行版</strong></p>
<p>对于Linux和MacOS用户而言，可以解压zip文件到指定目录下：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir /opt/gradle</span><br><span class="line">$ unzip -d /opt/gradle gradle-4.3-bin.zip</span><br><span class="line">$ ls /opt/gradle/gradle-4.3</span><br><span class="line">LICENSE  NOTICE  bin  getting-started.html  init.d  lib  media</span><br></pre></td></tr></table></figure>
<p>对于Windows用户而言，可以在文件资源管理器中新建一个目录(例如：C:\Gradle)，然后在打开一个资源管理器，进入Gradle发行包所在的目录，双击解压该文件，最后将解压后的gradle-4.0.2文件移动至新创建的目录中。</p>
<p><strong>第三步：配置系统环境变量</strong></p>
<p>对于Linux和MacOS用户，运行命令</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vi /etc/profile</span><br></pre></td></tr></table></figure>
<p>或者</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gedit /etc/profile</span><br></pre></td></tr></table></figure>
<p>在文档末尾输入</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:/opt/gradle/gradle-4.3/bin</span><br></pre></td></tr></table></figure>
<p>对于Windows用户，可以在<em>此电脑</em>上右击选择属性，选择<em>高级系统设置</em>，选择<em>环境变量</em>，为Path增添Gradle的bin目录(例如：C:\Gradle\gradle-4.0.2\bin)。</p>
<p><strong>第四步：验证</strong></p>
<p>打开一个控制台(或Windows命令提示符)并运行</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gradle -v</span><br></pre></td></tr></table></figure>
<p>如果安装正常，会得到如下输出</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">------------------------------------------------------------</span></span><br><span class="line"><span class="selector-tag">Gradle</span> 4<span class="selector-class">.2</span><span class="selector-class">.1</span></span><br><span class="line"><span class="selector-tag">------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">Build</span> <span class="selector-tag">time</span>:   2017<span class="selector-tag">-10-02</span> 15<span class="selector-pseudo">:36</span><span class="selector-pseudo">:21</span> <span class="selector-tag">UTC</span></span><br><span class="line"><span class="selector-tag">Revision</span>:     <span class="selector-tag">a88ebd6be7840c2e59ae4782eb0f27fbe3405ddf</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">Groovy</span>:       2<span class="selector-class">.4</span><span class="selector-class">.12</span></span><br><span class="line"><span class="selector-tag">Ant</span>:          <span class="selector-tag">Apache</span> <span class="selector-tag">Ant</span>(<span class="selector-tag">TM</span>) <span class="selector-tag">version</span> 1<span class="selector-class">.9</span><span class="selector-class">.6</span> <span class="selector-tag">compiled</span> <span class="selector-tag">on</span> <span class="selector-tag">June</span> 29 2015</span><br><span class="line"><span class="selector-tag">JVM</span>:          1<span class="selector-class">.8</span><span class="selector-class">.0_131</span> (<span class="selector-tag">Oracle</span> <span class="selector-tag">Corporation</span> 25<span class="selector-class">.131-b11</span>)</span><br><span class="line"><span class="selector-tag">OS</span>:           <span class="selector-tag">Linux</span> 4<span class="selector-class">.10</span><span class="selector-class">.0-38-generic</span> <span class="selector-tag">amd64</span></span><br></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> Gradle </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Gradle </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Gradle初识，从Java构建工具讲起]]></title>
      <url>/2017/11/03/Gradle%E5%88%9D%E8%AF%86%EF%BC%8C%E4%BB%8EJava%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7%E8%AE%B2%E8%B5%B7/</url>
      <content type="html"><![CDATA[<h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>　　既然说到Gradle，我们首先要明白Gradle到底是个啥。维基百科这样定义：</p>
<blockquote>
<p>　　Gradle是一个基于Apache Ant和Apache Maven概念的项目自动化建构工具。它使用一种基于Groovy的特定领域语言来声明项目设置，而不是传统的XML。当前其支持的语言限于Java、Groovy和Scala，计划未来将支持更多的语言。</p>
</blockquote>
<p>　　没错它是一种构建工具，所以我们先从构建工具讲起。创世之初，世上只有Make一种构建工具，后来，其发展为GNU Make。但是，由于需求的不断涌现，码农的世界里逐渐演化出了千奇百怪的构建工具。</p>
<p>　　当前，JVM生态圈由三大构建工具所统治：</p>
<ul>
<li>Apache Ant带着Ivy</li>
<li>Maven</li>
<li>Gradle<a id="more"></a>
<h3 id="构建工具"><a href="#构建工具" class="headerlink" title="构建工具"></a>构建工具</h3></li>
</ul>
<h4 id="Ant-with-Ivy"><a href="#Ant-with-Ivy" class="headerlink" title="Ant with Ivy"></a>Ant with Ivy</h4><p>　　Ant是第一个“现代”构建工具，在很多方面它有些像Make。2000年发布，在很短时间内成为Java项目上最流行的构建工具。它的学习曲线很缓，因此不需要什么特殊的准备就能上手。它基于过程式编程的idea。在最初的版本之后，逐渐具备了支持插件的功能。<br>　　主要的不足是用XML作为脚本编写格式。 XML，本质上是层次化的，并不能很好地贴合Ant过程化编程的初衷。Ant的另外一个问题是，除非是很小的项目，否则它的XML文件很快就大得无法管理。<br>后来，随着通过网络进行依赖管理成为必备功能，Ant采用了Apache Ivy。</p>
<p>　　Ant的主要优点在于对构建过程的控制上。</p>
<h4 id="Maven"><a href="#Maven" class="headerlink" title="Maven"></a>Maven</h4><p>　　Maven发布于2004年。目的是解决码农使用Ant所带来的一些问题。<br>　　Maven仍旧使用XML作为编写构建配置的文件格式，但是，文件结构却有巨大的变化。Ant需要码农将执行task所需的全部命令都一一列出，然而Maven依靠约定（convention）并提供现成的可调用的目标（goal）。不仅如此，有可能最重要的一个补充是，Maven具备从网络上自动下载依赖的能力（Ant后来通过Ivy也具备了这个功能），这一点革命性地改变了我们开发软件的方式。<br>　　但是，Maven也有它的问题。依赖管理不能很好地处理相同库文件不同版本之间的冲突（Ivy在这方面更好一些）。XML作为配置文件的格式有严格的结构层次和标准，定制化目标（goal）很困难。因为Maven主要聚焦于依赖管理，实际上用Maven很难写出复杂、定制化的构建脚本，甚至不如Ant。<br>用XML写的配置文件会变得越来越大，越来越笨重。在大型项目中，它经常什么“特别的”事还没干就有几百行代码。<br>　　Maven的主要优点是生命周期。只要项目基于一定之规，它的整个生命周期都能够轻松搞定，代价是牺牲了灵活性。</p>
<h4 id="Gradle"><a href="#Gradle" class="headerlink" title="Gradle"></a>Gradle</h4><p>　　Gradle结合了前两者的优点，在此基础之上做了很多改进。它具有Ant的强大和灵活，又有Maven的生命周期管理且易于使用。最终结果就是一个工具在2012年华丽诞生并且很快地获得了广泛关注。例如，Google采用Gradle作为Android OS的默认构建工具。<br>　　Gradle不用XML，它使用基于Groovy的专门的DSL，从而使Gradle构建脚本变得比用Ant和Maven写的要简洁清晰。Gradle样板文件的代码很少，这是因为它的DSL被设计用于解决特定的问题：贯穿软件的生命周期，从编译，到静态检查，到测试，直到打包和部署。<br>　　它使用Apache Ivy来处理Jar包的依赖。<br>　　Gradle的成就可以概括为：约定好，灵活性也高。</p>
<h3 id="代码示例"><a href="#代码示例" class="headerlink" title="代码示例"></a>代码示例</h3><p>　　我们写一段构建脚本来完成从编译、静态检查、单元测试到最终打Jar包的过程。我们分别使用三个框架（Ant，Maven和Gradle）来完成这件事情，比较一下语法。通过比较每一个任务的代码，我们能够对差异有一个更好的理解，并对选择构建工具做出一个周全的决策。</p>
<h4 id="Ant-with-Ivy-1"><a href="#Ant-with-Ivy-1" class="headerlink" title="Ant with Ivy"></a>Ant with Ivy</h4><p>　　Ivy的依赖需要在ivy.xml中指定。我们的例子很简单，只需要依赖JUnit和Hamcrest。</p>
<p>ivy.xml</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ivy-module</span> <span class="attr">version</span>=<span class="string">"2.0"</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">info</span> <span class="attr">organisation</span>=<span class="string">"org.apache"</span> <span class="attr">module</span>=<span class="string">"java-build-tools"</span>/&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span> <span class="attr">org</span>=<span class="string">"junit"</span> <span class="attr">name</span>=<span class="string">"junit"</span> <span class="attr">rev</span>=<span class="string">"4.11"</span>/&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span> <span class="attr">org</span>=<span class="string">"org.hamcrest"</span> <span class="attr">name</span>=<span class="string">"hamcrest-all"</span> <span class="attr">rev</span>=<span class="string">"1.3"</span>/&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">ivy-module</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>　　现在我们来创建Ant脚本，任务只是编译一个Jar文件。最终文件是下面的build.xml。</p>
<p>build.xml</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;project xmlns:ivy=&quot;antlib:org.apache.ivy.ant&quot; name=&quot;java-build-tools&quot; default=&quot;jar&quot;&gt;</span><br><span class="line">	</span><br><span class="line">	&lt;property name=&quot;src.dir&quot; value=&quot;src&quot;/&gt;  </span><br><span class="line">    &lt;property name=&quot;build.dir&quot; value=&quot;build&quot;/&gt;  </span><br><span class="line">    &lt;property name=&quot;classes.dir&quot; value=&quot;$&#123;build.dir&#125;/classes&quot;/&gt;  </span><br><span class="line">    &lt;property name=&quot;jar.dir&quot; value=&quot;$&#123;build.dir&#125;/jar&quot;/&gt;  </span><br><span class="line">    &lt;property name=&quot;lib.dir&quot; value=&quot;lib&quot; /&gt;  </span><br><span class="line">    &lt;path id=&quot;lib.path.id&quot;&gt;  </span><br><span class="line">    	&lt;fileset dir=&quot;$&#123;lib.dir&#125;&quot; /&gt;  </span><br><span class="line">    &lt;/path&gt;  </span><br><span class="line">       </span><br><span class="line">    &lt;target name=&quot;resolve&quot;&gt;  </span><br><span class="line">    	&lt;ivy:retrieve /&gt;  </span><br><span class="line">    &lt;/target&gt;  </span><br><span class="line">       </span><br><span class="line">    &lt;target name=&quot;clean&quot;&gt;  </span><br><span class="line">        &lt;delete dir=&quot;$&#123;build.dir&#125;&quot;/&gt;  </span><br><span class="line">    &lt;/target&gt;  </span><br><span class="line">       </span><br><span class="line">    &lt;target name=&quot;compile&quot; depends=&quot;resolve&quot;&gt;  </span><br><span class="line">        &lt;mkdir dir=&quot;$&#123;classes.dir&#125;&quot;/&gt;  </span><br><span class="line">        &lt;javac srcdir=&quot;$&#123;src.dir&#125;&quot; destdir=&quot;$&#123;classes.dir&#125;&quot; classpathref=&quot;lib.path.id&quot;/&gt;  </span><br><span class="line">    &lt;/target&gt;  </span><br><span class="line">       </span><br><span class="line">    &lt;target name=&quot;jar&quot; depends=&quot;compile&quot;&gt;  </span><br><span class="line">        &lt;mkdir dir=&quot;$&#123;jar.dir&#125;&quot;/&gt;  </span><br><span class="line">        &lt;jar destfile=&quot;$&#123;jar.dir&#125;/$&#123;ant.project.name&#125;.jar&quot; basedir=&quot;$&#123;classes.dir&#125;&quot;/&gt;  </span><br><span class="line">    &lt;/target&gt;</span><br><span class="line">    </span><br><span class="line">&lt;/project&gt;</span><br></pre></td></tr></table></figure>
<p>　　首先，我们设置了几个属性，然后是一个接一个的task。我们用Ivy来处理依赖，清理，编译和打包，这是几乎所有的Java项目都会进行的task，配置有很多。<br>运行Ant task来生成Jar文件，执行下面的命令。</p>
<figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">ant jar</span></span><br></pre></td></tr></table></figure>
<h4 id="Maven-1"><a href="#Maven-1" class="headerlink" title="Maven"></a>Maven</h4><p>pom.xml</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot;  </span><br><span class="line">         xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;  </span><br><span class="line">         xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0</span><br><span class="line">http://maven.apache.org/maven-v4_0_0.xsd&quot;&gt;</span><br><span class="line">   </span><br><span class="line">    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;  </span><br><span class="line">    &lt;groupId&gt;com.technologyconversations&lt;/groupId&gt;  </span><br><span class="line">    &lt;artifactId&gt;java-build-tools&lt;/artifactId&gt;  </span><br><span class="line">    &lt;packaging&gt;jar&lt;/packaging&gt;  </span><br><span class="line">    &lt;version&gt;1.0&lt;/version&gt;  </span><br><span class="line">   </span><br><span class="line">    &lt;dependencies&gt;  </span><br><span class="line">        &lt;dependency&gt;  </span><br><span class="line">            &lt;groupId&gt;junit&lt;/groupId&gt;  </span><br><span class="line">            &lt;artifactId&gt;junit&lt;/artifactId&gt;  </span><br><span class="line">            &lt;version&gt;4.11&lt;/version&gt;  </span><br><span class="line">        &lt;/dependency&gt;  </span><br><span class="line">        &lt;dependency&gt;  </span><br><span class="line">            &lt;groupId&gt;org.hamcrest&lt;/groupId&gt;  </span><br><span class="line">            &lt;artifactId&gt;hamcrest-all&lt;/artifactId&gt;  </span><br><span class="line">            &lt;version&gt;1.3&lt;/version&gt;  </span><br><span class="line">        &lt;/dependency&gt;  </span><br><span class="line">    &lt;/dependencies&gt;  </span><br><span class="line">   </span><br><span class="line">    &lt;build&gt;  </span><br><span class="line">        &lt;plugins&gt;  </span><br><span class="line">            &lt;plugin&gt;  </span><br><span class="line">                &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;  </span><br><span class="line">                &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;  </span><br><span class="line">                &lt;version&gt;2.3.2&lt;/version&gt;  </span><br><span class="line">            &lt;/plugin&gt;  </span><br><span class="line">        &lt;/plugins&gt;  </span><br><span class="line">    &lt;/build&gt;  </span><br><span class="line">   </span><br><span class="line">&lt;/project&gt;</span><br></pre></td></tr></table></figure>
<p>　　通过执行下面的命令来运行Maven goal生成Jar文件。</p>
<figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn <span class="class"><span class="keyword">package</span></span></span><br></pre></td></tr></table></figure>
<p>　　主要的区别在于Maven不需要指定执行的操作。我们没有创建task，而是设置了一些参数（有哪些依赖，用哪些插件…)。Maven推行使用约定并提供了开箱即用的goals。Ant和Maven的XML文件都会随时间而变大，为了说明这一点，我们加入CheckStyle，FindBugs和PMD插件来进行静态检查，三者是Java项目中使用很普遍的的工具。我们希望将所有静态检查的执行以及单元测试一起作为一个单独的targetVerify。当然我们还应该指定自定义的checkstyle配置文件的路径并且确保错误时能够提示。更新后的Maven代码如下：</p>
<p>pom.xml</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-checkstyle-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.12.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">executions</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">execution</span>&gt;</span>  </span><br><span class="line">            <span class="tag">&lt;<span class="name">configuration</span>&gt;</span>  </span><br><span class="line">                <span class="tag">&lt;<span class="name">configLocation</span>&gt;</span>config/checkstyle/checkstyle.xml<span class="tag">&lt;/<span class="name">configLocation</span>&gt;</span>  </span><br><span class="line">                <span class="tag">&lt;<span class="name">consoleOutput</span>&gt;</span>true<span class="tag">&lt;/<span class="name">consoleOutput</span>&gt;</span>  </span><br><span class="line">                <span class="tag">&lt;<span class="name">failsOnError</span>&gt;</span>true<span class="tag">&lt;/<span class="name">failsOnError</span>&gt;</span>  </span><br><span class="line">            <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span>  </span><br><span class="line">            <span class="tag">&lt;<span class="name">goals</span>&gt;</span>  </span><br><span class="line">                <span class="tag">&lt;<span class="name">goal</span>&gt;</span>check<span class="tag">&lt;/<span class="name">goal</span>&gt;</span>  </span><br><span class="line">            <span class="tag">&lt;/<span class="name">goals</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;/<span class="name">execution</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;/<span class="name">executions</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.codehaus.mojo<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>findbugs-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">executions</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">execution</span>&gt;</span>  </span><br><span class="line">            <span class="tag">&lt;<span class="name">goals</span>&gt;</span>  </span><br><span class="line">                <span class="tag">&lt;<span class="name">goal</span>&gt;</span>check<span class="tag">&lt;/<span class="name">goal</span>&gt;</span>  </span><br><span class="line">            <span class="tag">&lt;/<span class="name">goals</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;/<span class="name">execution</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;/<span class="name">executions</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-pmd-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">executions</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">execution</span>&gt;</span>  </span><br><span class="line">            <span class="tag">&lt;<span class="name">goals</span>&gt;</span>  </span><br><span class="line">                <span class="tag">&lt;<span class="name">goal</span>&gt;</span>check<span class="tag">&lt;/<span class="name">goal</span>&gt;</span>  </span><br><span class="line">            <span class="tag">&lt;/<span class="name">goals</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;/<span class="name">execution</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;/<span class="name">executions</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>　　通过执行下面的命令来运行Maven goal，包括单元测试，静态检查，如CheckStyle，FindBugs和PMD。</p>
<figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">mvn </span>verify</span><br></pre></td></tr></table></figure>
<p>　　我们需要写很多XML来进行基本的常用的任务。在实际项目中有更多的依赖和task，Maven的pom.xml很容易就有成百上千行的配置。</p>
<h4 id="Gradle-1"><a href="#Gradle-1" class="headerlink" title="Gradle"></a>Gradle</h4><p>build.gradle</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">apply <span class="string">plugin:</span> <span class="string">'java'</span>  </span><br><span class="line">apply <span class="string">plugin:</span> <span class="string">'checkstyle'</span>  </span><br><span class="line">apply <span class="string">plugin:</span> <span class="string">'findbugs'</span>  </span><br><span class="line">apply <span class="string">plugin:</span> <span class="string">'pmd'</span>  </span><br><span class="line">       </span><br><span class="line">version = <span class="string">'1.0'</span>  </span><br><span class="line">       </span><br><span class="line">repositories &#123;  </span><br><span class="line">	mavenCentral()  </span><br><span class="line">&#125;  </span><br><span class="line">       </span><br><span class="line">dependencies &#123;  </span><br><span class="line">	testCompile <span class="string">group:</span> <span class="string">'junit'</span>, <span class="string">name:</span> <span class="string">'junit'</span>, <span class="string">version:</span> <span class="string">'4.11'</span>  </span><br><span class="line">    testCompile <span class="string">group:</span> <span class="string">'org.hamcrest'</span>, <span class="string">name:</span> <span class="string">'hamcrest-all'</span>, <span class="string">version:</span> <span class="string">'1.3'</span>  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>　　Gradle不仅代码少了很多，对于熟悉的人来说，比Maven要更容易理解，而且它还包括很多Maven代码没有覆盖的有用task。请执行下面的命令来得到Gradle在当前配置下能够支持的task列表。</p>
<figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gradle tasks <span class="comment">--all</span></span><br></pre></td></tr></table></figure>
<h3 id="清晰度，复杂性和学习曲线"><a href="#清晰度，复杂性和学习曲线" class="headerlink" title="清晰度，复杂性和学习曲线"></a>清晰度，复杂性和学习曲线</h3><p>　　对于初学者，Ant是最清晰的。只要读懂XML配置文件你就能够理解它干了些什么，但是，Ant文件很容易变复杂。Maven和Gradle，尤其是Gradle，有很多开箱即用的插件。例如，下面这行代码可能会令那些对Gradle一知半解的人有些困惑，不知道通过这句话就能够使用哪些task。</p>
<p>build.gradle</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apply <span class="string">plugin:</span> <span class="string">'java'</span></span><br></pre></td></tr></table></figure>
<p>　　简单的这一行增加了20多个可用的任务.<br>　　Ant的可读性和Maven的简单性，在我看来，是伪命题，只适用于Gradle学习曲线的初级阶段。一旦用上了Gradle的DSL，就会发现语法比Ant和Maven更加短小精悍、易于理解。不仅如此，只有Gradle既提供了约定也提供了自定义命令。如果说Maven可以通过Ant task来扩展，这似乎有些滑稽可笑，而且低效，Groovy写的Gradle将其提升了一个层次。</p>
<p><strong>原文链接：<a href="http://technologyconversations.com/2014/06/18/build-tools/" target="_blank" rel="noopener">http://technologyconversations.com/2014/06/18/build-tools/</a></strong></p>
]]></content>
      
        <categories>
            
            <category> Gradle </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Gradle </tag>
            
            <tag> 构建工具 </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
